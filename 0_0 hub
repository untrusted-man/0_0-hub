--[[
    0_0 Hub V2.1 - Corrected Execution Flow
    - Fixed a script error that prevented the UI from loading.
    - Improved ESP script to clean up event connections properly.
    - Tab-based navigation (Welcome, Scripts, Settings, Info)
    - UI theme customization (Dark, Pastel, Ocean)
    - Language selection (English, Spanish)
]]

--// Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

--// Player Variables
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

--// Script Configuration & State
local UI_State = {
    Visible = false,
    CurrentTab = "Welcome",
    Draggable = false,
    DragStart = nil,
    StartPos = nil
}

--// Localization (for Settings tab)
local Translations = {
    en = {
        hub_title = "0_0 Hub",
        welcome_tab = "Welcome",
        scripts_tab = "Scripts",
        settings_tab = "Settings",
        info_tab = "Info",
        close_tooltip = "Close",
        welcome_header = "Welcome, ",
        welcome_desc = "Select a tab on the left to get started.",
        scripts_header = "Scripts",
        scripts_desc = "Execute scripts from here.",
        anime_visuals_btn = "üå∏ Anime Visuals üå∏",
        day_night_btn = "‚òÄÔ∏è Day/Night üåô",
        inf_yield_btn = "Infinite Yield",
        esp_toggle_btn = "üëÅ ESP Toggle",
        settings_header = "Settings",
        settings_theme_label = "Theme",
        settings_lang_label = "Language",
        info_header = "Information",
        info_desc = "A versatile hub for your needs.\nVersion: 2.1",
        login_success = "Login successful!",
        login_fail = "Credentials incorrect.",
        login_user_placeholder = "Username",
        login_pass_placeholder = "Password",
        login_btn = "Login"
    },
    es = {
        hub_title = "Centro 0_0",
        welcome_tab = "Bienvenida",
        scripts_tab = "Scripts",
        settings_tab = "Ajustes",
        info_tab = "Informaci√≥n",
        close_tooltip = "Cerrar",
        welcome_header = "¬°Bienvenido, ",
        welcome_desc = "Selecciona una pesta√±a a la izquierda para comenzar.",
        scripts_header = "Scripts",
        scripts_desc = "Ejecuta scripts desde aqu√≠.",
        anime_visuals_btn = "üå∏ Visuales Anime üå∏",
        day_night_btn = "‚òÄÔ∏è D√≠a/Noche üåô",
        inf_yield_btn = "Infinite Yield",
        esp_toggle_btn = "üëÅ Activar ESP",
        settings_header = "Ajustes",
        settings_theme_label = "Tema",
        settings_lang_label = "Idioma",
        info_header = "Informaci√≥n",
        info_desc = "Un centro vers√°til para tus necesidades.\nVersi√≥n: 2.1",
        login_success = "¬°Inicio de sesi√≥n exitoso!",
        login_fail = "Credenciales incorrectas.",
        login_user_placeholder = "Usuario",
        login_pass_placeholder = "Contrase√±a",
        login_btn = "Iniciar Sesi√≥n"
    }
}

--// Theme Data (for Settings tab)
local Themes = {
    Dark = {
        Background = Color3.fromRGB(28, 28, 36),
        Secondary = Color3.fromRGB(40, 40, 52),
        Primary = Color3.fromRGB(55, 55, 70),
        Accent = Color3.fromRGB(120, 110, 255),
        Text = Color3.fromRGB(235, 235, 245),
        TextSecondary = Color3.fromRGB(180, 180, 190)
    },
    Pastel = {
        Background = Color3.fromRGB(255, 240, 245),
        Secondary = Color3.fromRGB(255, 225, 235),
        Primary = Color3.fromRGB(255, 200, 220),
        Accent = Color3.fromRGB(255, 105, 180),
        Text = Color3.fromRGB(60, 40, 50),
        TextSecondary = Color3.fromRGB(120, 90, 100)
    },
    Ocean = {
        Background = Color3.fromRGB(20, 30, 40),
        Secondary = Color3.fromRGB(30, 45, 60),
        Primary = Color3.fromRGB(40, 60, 80),
        Accent = Color3.fromRGB(0, 170, 255),
        Text = Color3.fromRGB(220, 230, 240),
        TextSecondary = Color3.fromRGB(170, 180, 190)
    }
}
local currentTheme = "Dark"
local currentLang = "en"

-- A table to hold references to all UI elements that need their text/color updated
local ThemedElements = {}

--// Main Script Functions (Unchanged)
local function runAnimeVisuals()
    -- Your provided script for AnimeVisuals
    -- This code is taken directly from your request
    local Players = game:GetService("Players")
    local Lighting = game:GetService("Lighting")
    local TweenService = game:GetService("TweenService")
    local UserInputService = game:GetService("UserInputService")
    local player = Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")
    local camera = workspace.CurrentCamera

    -- === Effect creation helper ===
    local function createEffect(class, name, props)
        local e = Lighting:FindFirstChild(name) or Instance.new(class)
        e.Name = name
        e.Parent = Lighting
        for k,v in pairs(props) do
            pcall(function() e[k] = v end)
        end
        return e
    end

    -- === Effects ===
    local cc = createEffect("ColorCorrectionEffect", "Anime_CC", {
        Enabled = true, Brightness = 0, Contrast = 0.2, Saturation = 0.3,
        TintColor = Color3.fromRGB(255, 230, 240)
    })
    local bloom = createEffect("BloomEffect", "Anime_Bloom", {
        Enabled = true, Intensity = 1.2, Threshold = 0.6, Size = 56
    })
    local sun = createEffect("SunRaysEffect", "Anime_Sun", {
        Enabled = true, Intensity = 0.1
    })
    local dof = createEffect("DepthOfFieldEffect", "Anime_DoF", {
        Enabled = false, FocusDistance = 60, InFocusRadius = 12, FarIntensity = 0.7
    })

    -- === Tween helper ===
    local function tween(obj, props, t)
        TweenService:Create(obj, TweenInfo.new(t or 0.3, Enum.EasingStyle.Sine), props):Play()
    end

    -- === UI Root ===
    local gui = Instance.new("ScreenGui")
    gui.Name = "AnimeVisualsGUI"
    gui.ResetOnSpawn = false
    gui.Parent = playerGui

    local main = Instance.new("Frame")
    main.Size = UDim2.new(0, 420, 0, 360)
    main.Position = UDim2.new(0.5, -210, 0.85, -180)
    main.AnchorPoint = Vector2.new(0.5, 0.5)
    main.BackgroundColor3 = Color3.fromRGB(25, 25, 40)
    main.BackgroundTransparency = 0.15
    main.BorderSizePixel = 0
    main.Parent = gui
    main.Active = true
    main.Draggable = true
    Instance.new("UICorner", main).CornerRadius = UDim.new(0, 18)

    -- Title
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, -40, 0, 40)
    title.Position = UDim2.new(0, 0, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "üå∏ Anime Visuals üå∏"
    title.Font = Enum.Font.GothamBold
    title.TextSize = 20
    title.TextColor3 = Color3.fromRGB(250, 240, 255)
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = main

    -- Close Button
    local closeBtn = Instance.new("TextButton")
    closeBtn.Size = UDim2.new(0, 32, 0, 32)
    closeBtn.Position = UDim2.new(1, -36, 0, 4)
    closeBtn.BackgroundColor3 = Color3.fromRGB(80, 40, 40)
    closeBtn.Text = "X"
    closeBtn.TextColor3 = Color3.fromRGB(255, 220, 220)
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.TextSize = 16
    closeBtn.Parent = main
    Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(0, 8)

    -- Toggle button
    local toggle = Instance.new("TextButton")
    toggle.Size = UDim2.new(0, 120, 0, 28)
    toggle.Position = UDim2.new(1, -130, 0, 6)
    toggle.BackgroundColor3 = Color3.fromRGB(60, 50, 120)
    toggle.Text = "Disable"
    toggle.TextColor3 = Color3.fromRGB(240,240,255)
    toggle.Font = Enum.Font.Gotham
    toggle.TextSize = 14
    toggle.Parent = main
    Instance.new("UICorner", toggle).CornerRadius = UDim.new(0, 8)

    -- Content container
    local content = Instance.new("Frame")
    content.Size = UDim2.new(1, -20, 1, -60)
    content.Position = UDim2.new(0, 10, 0, 50)
    content.BackgroundTransparency = 1
    content.Parent = main

    -- === Presets ===
    local presets = Instance.new("Frame")
    presets.Size = UDim2.new(1, 0, 0, 36)
    presets.BackgroundTransparency = 1
    presets.Parent = content

    local function makePreset(x, text, color)
        local b = Instance.new("TextButton")
        b.Size = UDim2.new(0.3, 0, 1, 0)
        b.Position = UDim2.new(x, 0, 0, 0)
        b.BackgroundColor3 = color
        b.Text = text
        b.TextColor3 = Color3.fromRGB(255,255,255)
        b.Font = Enum.Font.GothamBold
        b.TextSize = 14
        b.Parent = presets
        Instance.new("UICorner", b).CornerRadius = UDim.new(0, 10)
        return b
    end

    local p1 = makePreset(0.0, "Pastel", Color3.fromRGB(150,100,200))
    local p2 = makePreset(0.35, "Contrast", Color3.fromRGB(100,180,240))
    local p3 = makePreset(0.7, "Sunset", Color3.fromRGB(255,120,120))

    -- === Slider Factory ===
    local y = 50
    local draggingSlider = nil

    local function createSlider(labelText, min, max, default, callback)
        local container = Instance.new("Frame")
        container.Size = UDim2.new(1, 0, 0, 46)
        container.Position = UDim2.new(0, 0, 0, y)
        container.BackgroundTransparency = 1
        container.Parent = content

        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(0.4, 0, 1, -14)
        label.Position = UDim2.new(0, 0, 0, 0)
        label.BackgroundTransparency = 1
        label.Text = labelText
        label.TextColor3 = Color3.fromRGB(230,230,255)
        label.Font = Enum.Font.Gotham
        label.TextSize = 14
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Parent = container

        local bar = Instance.new("Frame")
        bar.Size = UDim2.new(0.55, 0, 0, 6)
        bar.Position = UDim2.new(0.42, 0, 0.6, 0)
        bar.BackgroundColor3 = Color3.fromRGB(40,40,60)
        bar.BorderSizePixel = 0
        bar.Parent = container
        Instance.new("UICorner", bar).CornerRadius = UDim.new(0, 4)

        local fill = Instance.new("Frame")
        fill.Size = UDim2.new((default-min)/(max-min),0,1,0)
        fill.BackgroundColor3 = Color3.fromRGB(180,120,230)
        fill.BorderSizePixel = 0
        fill.Parent = bar
        Instance.new("UICorner", fill).CornerRadius = UDim.new(0, 4)

        local knob = Instance.new("Frame")
        knob.Size = UDim2.new(0,12,0,12)
        knob.Position = UDim2.new(fill.Size.X.Scale, -6, 0.5, -6)
        knob.BackgroundColor3 = Color3.fromRGB(250,250,255)
        knob.BorderSizePixel = 0
        knob.Parent = bar
        Instance.new("UICorner", knob).CornerRadius = UDim.new(1,0)

        local function updateFromX(x)
            local rel = math.clamp((x - bar.AbsolutePosition.X) / bar.AbsoluteSize.X, 0, 1)
            fill.Size = UDim2.new(rel,0,1,0)
            knob.Position = UDim2.new(rel, -6, 0.5, -6)
            local v = min + (max-min)*rel
            callback(v)
        end

        knob.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                draggingSlider = {update = updateFromX}
            end
        end)
        bar.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                updateFromX(input.Position.X)
                draggingSlider = {update = updateFromX}
            end
        end)

        y = y + 50
        callback(default)
    end

    UserInputService.InputChanged:Connect(function(input)
        if draggingSlider and input.UserInputType == Enum.UserInputType.MouseMovement then
            draggingSlider.update(input.Position.X)
        end
    end)
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            draggingSlider = nil
        end
    end)

    -- === Sliders ===
    createSlider("Saturation", -1, 2, 0.3, function(v) cc.Saturation = v end)
    createSlider("Contrast", -1, 2, 0.2, function(v) cc.Contrast = v end)
    createSlider("Bloom", 0, 3, 1.2, function(v) bloom.Intensity = v end)
    createSlider("FOV", 50, 100, 70, function(v) camera.FieldOfView = v end)

    -- === Preset logic ===
    local function applyPreset(id)
        if id==1 then
            cc.Saturation=0.6; cc.Contrast=0.15; bloom.Intensity=1; camera.FieldOfView=75
        elseif id==2 then
            cc.Saturation=-0.1; cc.Contrast=0.6; bloom.Intensity=1.6; camera.FieldOfView=68
        elseif id==3 then
            cc.Saturation=0.3; cc.Contrast=0.2; bloom.Intensity=1.4; camera.FieldOfView=72
        end
    end
    p1.MouseButton1Click:Connect(function() applyPreset(1) end)
    p2.MouseButton1Click:Connect(function() applyPreset(2) end)
    p3.MouseButton1Click:Connect(function() applyPreset(3) end)

    -- === Toggle visuals ===
    local enabled = true
    toggle.MouseButton1Click:Connect(function()
        enabled = not enabled
        toggle.Text = enabled and "Disable" or "Enable"
        cc.Enabled = enabled
        bloom.Enabled = enabled
        sun.Enabled = enabled
        dof.Enabled = enabled
    end)

    -- === Show/Hide UI with animation ===
    local isVisible = true
    local function toggleUI()
        if isVisible then
            tween(main,{BackgroundTransparency=1},0.3)
            tween(main,{Position=UDim2.new(0.5,-210,1.2,0)},0.3)
            task.wait(0.3)
            main.Visible = false
        else
            main.Visible = true
            main.BackgroundTransparency = 1
            main.Position = UDim2.new(0.5,-210,1.2,0)
            tween(main,{BackgroundTransparency=0.15},0.3)
            tween(main,{Position=UDim2.new(0.5,-210,0.85,-180)},0.4)
        end
        isVisible = not isVisible
    end

    closeBtn.MouseButton1Click:Connect(toggleUI)

    UserInputService.InputBegan:Connect(function(input,gp)
        if gp then return end
        if input.KeyCode==Enum.KeyCode.RightControl then
            toggleUI()
        end
    end)

    -- Startup animation
    main.Position = UDim2.new(0.5,-210,1.2,0)
    tween(main,{Position=UDim2.new(0.5,-210,0.85,-180)},0.6)
end
local function runDayNight()
    -- Your provided script for Day/Night UI
    -- This code is taken directly from your request
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")
    local Lighting = game:GetService("Lighting")
    local UserInputService = game:GetService("UserInputService")

    -- ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "DayNightUI"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = playerGui

    -- MAIN FRAME
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0,300,0,150)
    mainFrame.Position = UDim2.new(0.5,-150,0.8,-75)
    mainFrame.AnchorPoint = Vector2.new(0.5,0.5)
    mainFrame.BackgroundColor3 = Color3.fromRGB(28,28,30)
    mainFrame.BorderSizePixel = 0
    mainFrame.Active = true
    mainFrame.Parent = screenGui

    local uiCorner = Instance.new("UICorner", mainFrame)
    uiCorner.CornerRadius = UDim.new(0,12)

    -- TITLE
    local title = Instance.new("TextLabel", mainFrame)
    title.Size = UDim2.new(1, -60,0,36)
    title.Position = UDim2.new(0,16,0,8)
    title.BackgroundTransparency = 1
    title.Text = "Day/Night UI"
    title.Font = Enum.Font.GothamBold
    title.TextSize = 20
    title.TextColor3 = Color3.fromRGB(235,235,235)
    title.TextXAlignment = Enum.TextXAlignment.Left

    -- MINIMIZE BUTTON
    local minBtn = Instance.new("TextButton", mainFrame)
    minBtn.Size = UDim2.new(0,28,0,28)
    minBtn.Position = UDim2.new(1,-44,0,8)
    minBtn.Text = "‚Äî"
    minBtn.Font = Enum.Font.GothamBold
    minBtn.TextSize = 18
    minBtn.TextColor3 = Color3.fromRGB(255,255,255)
    minBtn.BackgroundColor3 = Color3.fromRGB(64,64,64)
    minBtn.BorderSizePixel = 0
    minBtn.AutoButtonColor = true
    local minCorner = Instance.new("UICorner", minBtn)
    minCorner.CornerRadius = UDim.new(0,6)

    -- SLIDER FRAME
    local sliderFrame = Instance.new("Frame", mainFrame)
    sliderFrame.Size = UDim2.new(0,260,0,20)
    sliderFrame.Position = UDim2.new(0,20,0,60)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(50,50,50)
    sliderFrame.BorderSizePixel = 0
    local sliderCorner = Instance.new("UICorner", sliderFrame)
    sliderCorner.CornerRadius = UDim.new(0,10)

    -- SLIDER KNOB
    local knob = Instance.new("Frame", sliderFrame)
    knob.Size = UDim2.new(0,20,1,0)
    knob.Position = UDim2.new(0,0,0,0)
    knob.BackgroundColor3 = Color3.fromRGB(255,200,50)
    knob.BorderSizePixel = 0
    local knobCorner = Instance.new("UICorner", knob)
    knobCorner.CornerRadius = UDim.new(0,10)

    -- TIME LABEL
    local timeLabel = Instance.new("TextLabel", mainFrame)
    timeLabel.Size = UDim2.new(1,0,0,24)
    timeLabel.Position = UDim2.new(0,0,0,100)
    timeLabel.BackgroundTransparency = 1
    timeLabel.Text = "Time: 12:00"
    timeLabel.Font = Enum.Font.Gotham
    timeLabel.TextSize = 18
    timeLabel.TextColor3 = Color3.fromRGB(235,235,235)
    timeLabel.TextXAlignment = Enum.TextXAlignment.Center

    -- QUICK BUTTONS
    local function makeBtn(text,posX)
        local btn = Instance.new("TextButton", mainFrame)
        btn.Size = UDim2.new(0,60,0,30)
        btn.Position = UDim2.new(0,posX,0,120)
        btn.BackgroundColor3 = Color3.fromRGB(100,150,255)
        btn.Text = text
        btn.Font = Enum.Font.GothamBold
        btn.TextSize = 16
        btn.TextColor3 = Color3.fromRGB(255,255,255)
        local corner = Instance.new("UICorner", btn)
        corner.CornerRadius = UDim.new(0,8)
        return btn
    end

    local dayBtn = makeBtn("Day", 40)
    local nightBtn = makeBtn("Night", 200)

    -- UPDATE LIGHTING FUNCTION
    local function updateLighting(timeOfDay)
        Lighting.TimeOfDay = timeOfDay
        local hours = math.floor(timeOfDay)
        local minutes = math.floor((timeOfDay - hours)*60)
        timeLabel.Text = string.format("Time: %02d:%02d", hours, minutes)
    end

    -- SLIDER DRAG FIX
    do
        local draggingKnob = false
        local knobWidth = knob.AbsoluteSize.X

        knob.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                draggingKnob = true
            end
        end)

        knob.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                draggingKnob = false
            end
        end)

        UserInputService.InputChanged:Connect(function(input)
            if draggingKnob and input.UserInputType == Enum.UserInputType.MouseMovement then
                local posX = math.clamp(input.Position.X - sliderFrame.AbsolutePosition.X, 0, sliderFrame.AbsoluteSize.X)
                knob.Position = UDim2.new(0, posX - knobWidth/2, 0, 0)
                updateLighting((posX / sliderFrame.AbsoluteSize.X) * 24)
            end
        end)
    end

    -- QUICK BUTTON EVENTS
    dayBtn.MouseButton1Click:Connect(function()
        knob.Position = UDim2.new(0,0,0,0)
        updateLighting(12)
    end)
    nightBtn.MouseButton1Click:Connect(function()
        knob.Position = UDim2.new(1,-20,0,0)
        updateLighting(0)
    end)

    -- COLLAPSE BUTTON
    local collapsed = Instance.new("TextButton", screenGui)
    collapsed.Size = UDim2.new(0,140,0,44)
    collapsed.Position = UDim2.new(0,12,1,-64)
    collapsed.Text = "Day/Night UI"
    collapsed.Font = Enum.Font.GothamBold
    collapsed.TextSize = 18
    collapsed.TextColor3 = Color3.fromRGB(255,255,255)
    collapsed.BackgroundColor3 = Color3.fromRGB(48,48,50)
    collapsed.Visible = false
    local colCorner = Instance.new("UICorner", collapsed)
    colCorner.CornerRadius = UDim.new(0,10)

    minBtn.MouseButton1Click:Connect(function()
        mainFrame.Visible = false
        collapsed.Visible = true
    end)
    collapsed.MouseButton1Click:Connect(function()
        mainFrame.Visible = true
        collapsed.Visible = false
    end)

    -- DRAGGING MAIN FRAME (ignores slider/knob)
    do
        local draggingFrame = false
        local dragInput, dragStart, startPos

        local function update(input)
            if not draggingFrame then return end
            local delta = input.Position - dragStart
            mainFrame.Position = UDim2.new(0,startPos.X.Offset+delta.X,0,startPos.Y.Offset+delta.Y)
        end

        mainFrame.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                -- Ignore slider/knob
                if input.Target:IsDescendantOf(sliderFrame) then return end
                if input.Target == knob then return end

                draggingFrame = true
                dragStart = input.Position
                startPos = mainFrame.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        draggingFrame=false
                    end
                end)
            end
        end)

        mainFrame.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                dragInput = input
            end
        end)

        Players.LocalPlayer:GetMouse().Move:Connect(function()
            if draggingFrame and dragInput then update(dragInput) end
        end)
    end

    -- INITIAL TIME
    updateLighting(12)
end
local function runInfiniteYield()
    loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()
end

--// ESP Function (Improved)
local espEnabled = false
local espBoxes = {}
local espConnections = {}
local function toggleESP()
    espEnabled = not espEnabled
    if espEnabled then
        local function createEspBox(targetPlayer)
            if espBoxes[targetPlayer] then return end -- Don't create duplicates
            
            local function onCharacterAdded(character)
                if espBoxes[targetPlayer] then
                    espBoxes[targetPlayer]:Destroy()
                    espBoxes[targetPlayer] = nil
                end

                if not character or not character.Parent then return end
                local primaryPart = character:WaitForChild("HumanoidRootPart", 2)
                if not primaryPart then return end

                local box = Instance.new("BillboardGui")
                box.Name = "ESPBox"
                box.Size = UDim2.new(4, 0, 5, 0)
                box.Adornee = primaryPart
                box.AlwaysOnTop = true
                box.Parent = playerGui

                local frame = Instance.new("BoxHandleAdornment")
                frame.Size = character:GetExtentsSize() + Vector3.new(0, 1, 0)
                frame.Adornee = primaryPart
                frame.Color3 = Color3.fromRGB(255, 40, 40)
                frame.Transparency = 0.5
                frame.Parent = box
                
                local nameLabel = Instance.new("TextLabel")
                nameLabel.Size = UDim2.new(1, 0, 0, 20)
                nameLabel.Position = UDim2.new(0, 0, 0, -30)
                nameLabel.BackgroundTransparency = 1
                nameLabel.Text = targetPlayer.DisplayName
                nameLabel.Font = Enum.Font.SourceSansBold
                nameLabel.TextSize = 16
                nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                nameLabel.Parent = box
                
                espBoxes[targetPlayer] = box
            end

            if targetPlayer.Character then
                onCharacterAdded(targetPlayer.Character)
            end
            table.insert(espConnections, targetPlayer.CharacterAdded:Connect(onCharacterAdded))
        end
        
        for _, otherPlayer in pairs(Players:GetPlayers()) do
            if otherPlayer ~= player then
                createEspBox(otherPlayer)
            end
        end
        
        table.insert(espConnections, Players.PlayerAdded:Connect(function(newPlayer)
            if espEnabled then
                createEspBox(newPlayer)
            end
        end))
        
        table.insert(espConnections, Players.PlayerRemoving:Connect(function(removedPlayer)
            if espBoxes[removedPlayer] then
                espBoxes[removedPlayer]:Destroy()
                espBoxes[removedPlayer] = nil
            end
        end))

    else -- ESP Disabled
        for _, box in pairs(espBoxes) do
            if box then box:Destroy() end
        end
        espBoxes = {}
        
        for _, connection in ipairs(espConnections) do
            connection:Disconnect()
        end
        espConnections = {}
    end
end


--// New UI Creation
local function createModernUI()
    local Gui = Instance.new("ScreenGui")
    Gui.Name = "0_0_Hub_UI_V2"
    Gui.ResetOnSpawn = false
    
    -- Forward-declare functions
    local applyTheme, applyLanguage, switchTab

    local Main = Instance.new("Frame")
    Main.Name = "Main"
    Main.Size = UDim2.new(0, 600, 0, 400)
    Main.Position = UDim2.new(0.5, -300, 1.5, -200) -- Off-screen
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.BorderSizePixel = 0
    Main.ClipsDescendants = true
    Main.Parent = Gui
    table.insert(ThemedElements, {Element = Main, Property = "BackgroundColor3", Color = "Background"})
    
    local Corner = Instance.new("UICorner", Main)
    Corner.CornerRadius = UDim.new(0, 12)

    local Header = Instance.new("Frame")
    Header.Name = "Header"
    Header.Size = UDim2.new(1, 0, 0, 40)
    Header.BorderSizePixel = 0
    Header.Parent = Main
    table.insert(ThemedElements, {Element = Header, Property = "BackgroundColor3", Color = "Secondary"})

    Header.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            UI_State.Draggable = true
            UI_State.DragStart = input.Position
            UI_State.StartPos = Main.Position
        end
    end)
    Header.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            UI_State.Draggable = false
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if UI_State.Draggable and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - UI_State.DragStart
            Main.Position = UDim2.new(UI_State.StartPos.X.Scale, UI_State.StartPos.X.Offset + delta.X, UI_State.StartPos.Y.Scale, UI_State.StartPos.Y.Offset + delta.Y)
        end
    end)

    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Size = UDim2.new(1, -50, 1, 0)
    Title.Position = UDim2.new(0, 20, 0, 0)
    Title.BackgroundTransparency = 1
    Title.Font = Enum.Font.GothamBold
    Title.TextSize = 18
    Title.TextXAlignment = Enum.TextXAlignment.Left
    Title.Parent = Header
    table.insert(ThemedElements, {Element = Title, Property = "TextColor3", Color = "Text"})
    table.insert(ThemedElements, {Element = Title, Property = "Text", LangKey = "hub_title"})

    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "CloseButton"
    CloseButton.Size = UDim2.new(0, 30, 0, 30)
    CloseButton.Position = UDim2.new(1, -35, 0.5, -15)
    CloseButton.AnchorPoint = Vector2.new(0.5, 0.5)
    CloseButton.BackgroundTransparency = 1
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.Text = "‚úï"
    CloseButton.TextSize = 20
    CloseButton.Parent = Header
    table.insert(ThemedElements, {Element = CloseButton, Property = "TextColor3", Color = "TextSecondary"})

    local NavBar = Instance.new("Frame")
    NavBar.Name = "NavBar"
    NavBar.Size = UDim2.new(0, 150, 1, -40)
    NavBar.Position = UDim2.new(0, 0, 0, 40)
    NavBar.BorderSizePixel = 0
    NavBar.Parent = Main
    table.insert(ThemedElements, {Element = NavBar, Property = "BackgroundColor3", Color = "Secondary"})

    local NavListLayout = Instance.new("UIListLayout", NavBar)
    NavListLayout.Padding = UDim.new(0, 10)
    NavListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    NavListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

    local NavPadding = Instance.new("UIPadding", NavBar)
    NavPadding.PaddingTop = UDim.new(0, 15)

    local Content = Instance.new("Frame")
    Content.Name = "Content"
    Content.Size = UDim2.new(1, -150, 1, -40)
    Content.Position = UDim2.new(0, 150, 0, 40)
    Content.BackgroundTransparency = 1
    Content.Parent = Main

    local ContentPadding = Instance.new("UIPadding", Content)
    ContentPadding.PaddingLeft = UDim.new(0, 20)
    ContentPadding.PaddingRight = UDim.new(0, 20)
    ContentPadding.PaddingTop = UDim.new(0, 15)
    ContentPadding.PaddingBottom = UDim.new(0, 15)
    
    local TabFrames = {}
    local TabButtons = {}
    
    -- Define core UI functions here
    applyTheme = function(themeName)
        currentTheme = themeName
        local theme = Themes[themeName]
        for _, item in ipairs(ThemedElements) do
            if item.Property:find("Color") then
                TweenService:Create(item.Element, TweenInfo.new(0.3), {[item.Property] = theme[item.Color]}):Play()
            end
        end
        -- Recolor active tab button
        if TabButtons[UI_State.CurrentTab] then
            TabButtons[UI_State.CurrentTab].BackgroundColor3 = theme.Accent
        end
    end
    
    applyLanguage = function(langCode)
        currentLang = langCode
        local lang = Translations[langCode]
        for _, item in ipairs(ThemedElements) do
            if item.Property == "Text" then
                if item.LangKey then
                    item.Element.Text = lang[item.LangKey]
                elseif item.DynamicText then
                    item.Element.Text = item.DynamicText(langCode)
                end
            elseif item.Property == "PlaceholderText" then
                 item.Element.PlaceholderText = lang[item.LangKey]
            end
        end
    end

    switchTab = function(tabName)
        if UI_State.CurrentTab == tabName and TabFrames[tabName] and TabFrames[tabName].Visible then return end
        
        for name, frame in pairs(TabFrames) do
            frame.Visible = (name == tabName)
        end
        
        for name, button in pairs(TabButtons) do
            local color = (name == tabName) and Themes[currentTheme].Accent or Themes[currentTheme].Primary
            TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = color}):Play()
        end
        
        UI_State.CurrentTab = tabName
    end

    local function createTabContent(name)
        local Frame = Instance.new("Frame")
        Frame.Name = name .. "Tab"
        Frame.Size = UDim2.new(1, 0, 1, 0)
        Frame.BackgroundTransparency = 1
        Frame.Visible = false
        Frame.Parent = Content
        TabFrames[name] = Frame
        
        local ListLayout = Instance.new("UIListLayout", Frame)
        ListLayout.Padding = UDim.new(0, 10)
        ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        
        return Frame
    end
    
    -- Populate Tabs
    local WelcomeFrame = createTabContent("Welcome")
    local WelcomeHeader = Instance.new("TextLabel", WelcomeFrame)
    WelcomeHeader.Size = UDim2.new(1, 0, 0, 40); WelcomeHeader.BackgroundTransparency = 1; WelcomeHeader.Font = Enum.Font.GothamBold; WelcomeHeader.TextSize = 28; WelcomeHeader.TextXAlignment = Enum.TextXAlignment.Left
    table.insert(ThemedElements, {Element = WelcomeHeader, Property = "TextColor3", Color = "Text", DynamicText = function(lang) return Translations[lang].welcome_header .. player.DisplayName end})
    
    local WelcomeDesc = Instance.new("TextLabel", WelcomeFrame)
    WelcomeDesc.Size = UDim2.new(1, 0, 0, 50); WelcomeDesc.BackgroundTransparency = 1; WelcomeDesc.Font = Enum.Font.Gotham; WelcomeDesc.TextSize = 16; WelcomeDesc.TextWrapped = true; WelcomeDesc.TextXAlignment = Enum.TextXAlignment.Left
    table.insert(ThemedElements, {Element = WelcomeDesc, Property = "TextColor3", Color = "TextSecondary"})
    table.insert(ThemedElements, {Element = WelcomeDesc, Property = "Text", LangKey = "welcome_desc"})

    local ScriptsFrame = createTabContent("Scripts")
    local ScriptsHeader = Instance.new("TextLabel", ScriptsFrame)
    ScriptsHeader.Size = UDim2.new(1, 0, 0, 30); ScriptsHeader.BackgroundTransparency = 1; ScriptsHeader.Font = Enum.Font.GothamBold; ScriptsHeader.TextSize = 24; ScriptsHeader.TextXAlignment = Enum.TextXAlignment.Left
    table.insert(ThemedElements, {Element = ScriptsHeader, Property = "TextColor3", Color = "Text"})
    table.insert(ThemedElements, {Element = ScriptsHeader, Property = "Text", LangKey = "scripts_header"})
    
    local ScriptsDesc = Instance.new("TextLabel", ScriptsFrame)
    ScriptsDesc.Size = UDim2.new(1, 0, 0, 20); ScriptsDesc.BackgroundTransparency = 1; ScriptsDesc.Font = Enum.Font.Gotham; ScriptsDesc.TextSize = 14; ScriptsDesc.TextXAlignment = Enum.TextXAlignment.Left
    table.insert(ThemedElements, {Element = ScriptsDesc, Property = "TextColor3", Color = "TextSecondary"})
    table.insert(ThemedElements, {Element = ScriptsDesc, Property = "Text", LangKey = "scripts_desc"})
    
    local ScriptsContainer = Instance.new("ScrollingFrame", ScriptsFrame)
    ScriptsContainer.Size = UDim2.new(1, 0, 1, -60); ScriptsContainer.BackgroundTransparency = 1; ScriptsContainer.BorderSizePixel = 0; ScriptsContainer.AutomaticCanvasSize = Enum.AutomaticSize.Y
    local ScriptsListLayout = Instance.new("UIListLayout", ScriptsContainer)
    ScriptsListLayout.Padding = UDim.new(0, 8); ScriptsListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    
    local function createScriptButton(langKey, callback)
        local Btn = Instance.new("TextButton")
        Btn.Size = UDim2.new(1, 0, 0, 45); Btn.Font = Enum.Font.GothamBold; Btn.TextSize = 16; Btn.Parent = ScriptsContainer
        Instance.new("UICorner", Btn).CornerRadius = UDim.new(0, 8)
        table.insert(ThemedElements, {Element = Btn, Property = "BackgroundColor3", Color = "Primary"})
        table.insert(ThemedElements, {Element = Btn, Property = "TextColor3", Color = "Text"})
        table.insert(ThemedElements, {Element = Btn, Property = "Text", LangKey = langKey})
        Btn.MouseButton1Click:Connect(callback)
    end
    createScriptButton("anime_visuals_btn", runAnimeVisuals); createScriptButton("day_night_btn", runDayNight); createScriptButton("inf_yield_btn", runInfiniteYield); createScriptButton("esp_toggle_btn", toggleESP)

    local SettingsFrame = createTabContent("Settings")
    local SettingsHeader = Instance.new("TextLabel", SettingsFrame)
    SettingsHeader.Size = UDim2.new(1, 0, 0, 30); SettingsHeader.BackgroundTransparency = 1; SettingsHeader.Font = Enum.Font.GothamBold; SettingsHeader.TextSize = 24; SettingsHeader.TextXAlignment = Enum.TextXAlignment.Left
    table.insert(ThemedElements, {Element = SettingsHeader, Property = "TextColor3", Color = "Text"})
    table.insert(ThemedElements, {Element = SettingsHeader, Property = "Text", LangKey = "settings_header"})
    
    local function createSetting(langKey, parent)
        local Label = Instance.new("TextLabel", parent)
        Label.Size = UDim2.new(1, 0, 0, 20); Label.LayoutOrder = 1; Label.BackgroundTransparency = 1; Label.Font = Enum.Font.GothamSemibold; Label.TextSize = 16; Label.TextXAlignment = Enum.TextXAlignment.Left
        table.insert(ThemedElements, {Element = Label, Property = "TextColor3", Color = "TextSecondary"}); table.insert(ThemedElements, {Element = Label, Property = "Text", LangKey = langKey})
        local Container = Instance.new("Frame", parent)
        Container.Size = UDim2.new(1, 0, 0, 40); Container.LayoutOrder = 2; Container.BackgroundTransparency = 1
        local List = Instance.new("UIListLayout", Container); List.FillDirection = Enum.FillDirection.Horizontal; List.Padding = UDim.new(0, 10)
        return Container
    end
    
    local ThemeContainer = createSetting("settings_theme_label", SettingsFrame)
    local function createThemeButton(name)
        local Btn = Instance.new("TextButton", ThemeContainer)
        Btn.Size = UDim2.new(0, 80, 0, 30); Btn.Text = name; Btn.BackgroundColor3 = Themes[name].Accent; Btn.Font = Enum.Font.GothamBold; Btn.TextSize = 14; Btn.TextColor3 = Color3.new(1,1,1)
        Instance.new("UICorner", Btn).CornerRadius = UDim.new(0, 8)
        Btn.MouseButton1Click:Connect(function() applyTheme(name) end)
    end
    createThemeButton("Dark"); createThemeButton("Pastel"); createThemeButton("Ocean")

    local LangContainer = createSetting("settings_lang_label", SettingsFrame)
    local function createLangButton(name, langCode)
        local Btn = Instance.new("TextButton", LangContainer)
        Btn.Size = UDim2.new(0, 100, 0, 30); Btn.Text = name; Btn.Font = Enum.Font.GothamBold; Btn.TextSize = 14
        Instance.new("UICorner", Btn).CornerRadius = UDim.new(0, 8)
        table.insert(ThemedElements, {Element = Btn, Property = "BackgroundColor3", Color = "Primary"}); table.insert(ThemedElements, {Element = Btn, Property = "TextColor3", Color = "Text"})
        Btn.MouseButton1Click:Connect(function() applyLanguage(langCode) end)
    end
    createLangButton("English", "en"); createLangButton("Espa√±ol", "es")

    local InfoFrame = createTabContent("Info")
    local InfoHeader = Instance.new("TextLabel", InfoFrame)
    InfoHeader.Size = UDim2.new(1, 0, 0, 30); InfoHeader.BackgroundTransparency = 1; InfoHeader.Font = Enum.Font.GothamBold; InfoHeader.TextSize = 24; InfoHeader.TextXAlignment = Enum.TextXAlignment.Left
    table.insert(ThemedElements, {Element = InfoHeader, Property = "TextColor3", Color = "Text"}); table.insert(ThemedElements, {Element = InfoHeader, Property = "Text", LangKey = "info_header"})
    
    local InfoDesc = Instance.new("TextLabel", InfoFrame)
    InfoDesc.Size = UDim2.new(1, 0, 0, 80); InfoDesc.BackgroundTransparency = 1; InfoDesc.Font = Enum.Font.Gotham; InfoDesc.TextSize = 16; InfoDesc.TextWrapped = true; InfoDesc.TextXAlignment = Enum.TextXAlignment.Left
    table.insert(ThemedElements, {Element = InfoDesc, Property = "TextColor3", Color = "TextSecondary"}); table.insert(ThemedElements, {Element = InfoDesc, Property = "Text", LangKey = "info_desc"})

    local function createTabButton(name, icon, order, langKey)
        local Btn = Instance.new("TextButton", NavBar)
        Btn.Size = UDim2.new(0.9, 0, 0, 45); Btn.LayoutOrder = order; Btn.Font = Enum.Font.GothamBold; Btn.TextSize = 16; Btn.TextXAlignment = Enum.TextXAlignment.Left
        Instance.new("UICorner", Btn).CornerRadius = UDim.new(0, 8)
        table.insert(ThemedElements, {Element = Btn, Property = "BackgroundColor3", Color = "Primary"}); table.insert(ThemedElements, {Element = Btn, Property = "TextColor3", Color = "Text"})
        table.insert(ThemedElements, {Element = Btn, Property = "Text", DynamicText = function(lang) return " " .. icon .. "  " .. Translations[lang][langKey] end})
        Btn.MouseButton1Click:Connect(function() switchTab(name) end)
        TabButtons[name] = Btn
    end
    createTabButton("Welcome", "üëã", 1, "welcome_tab"); createTabButton("Scripts", "‚ö°", 2, "scripts_tab"); createTabButton("Settings", "‚öôÔ∏è", 3, "settings_tab"); createTabButton("Info", "‚ÑπÔ∏è", 4, "info_tab")
    
    local function toggleUI(visible)
        local endPos = visible and UDim2.new(0.5, -300, 0.5, -200) or UDim2.new(0.5, -300, 1.5, -200)
        local tweenStyle = visible and Enum.EasingStyle.Back or Enum.EasingStyle.Quad
        TweenService:Create(Main, TweenInfo.new(0.6, tweenStyle, Enum.EasingDirection.Out), {Position = endPos}):Play()
        UI_State.Visible = visible
        if visible then
            Gui.Parent = playerGui
        end
    end

    CloseButton.MouseButton1Click:Connect(function() toggleUI(false) end)

    applyTheme("Dark")
    applyLanguage("en")
    switchTab("Welcome")
    
    return Gui, toggleUI
end

--// Login UI (Modernized)
local function createLoginUI(onSuccess)
    local Gui = Instance.new("ScreenGui")
    Gui.Name = "0_0_Login"
    Gui.ResetOnSpawn = false
    Gui.Parent = playerGui

    local Frame = Instance.new("Frame")
    Frame.Size = UDim2.new(0, 360, 0, 240); Frame.Position = UDim2.new(0.5, -180, -0.5, -120); Frame.AnchorPoint = Vector2.new(0.5, 0.5); Frame.BackgroundColor3 = Themes.Dark.Background; Frame.BorderSizePixel = 0; Frame.Parent = Gui
    Instance.new("UICorner", Frame).CornerRadius = UDim.new(0, 16)

    local Title = Instance.new("TextLabel", Frame)
    Title.Size = UDim2.new(1, 0, 0, 44); Title.Position = UDim2.new(0, 0, 0, 10); Title.BackgroundTransparency = 1; Title.Text = "üîê 0_0 Hub Login"; Title.Font = Enum.Font.GothamBold; Title.TextSize = 20; Title.TextColor3 = Themes.Dark.Text

    local function createTextBox(placeholderKey, yPos, isPassword)
        local Box = Instance.new("TextBox", Frame)
        Box.Size = UDim2.new(0.8, 0, 0, 38); Box.Position = UDim2.new(0.1, 0, 0, yPos); Box.Font = Enum.Font.Gotham; Box.TextSize = 16; Box.BackgroundColor3 = Themes.Dark.Secondary; Box.TextColor3 = Themes.Dark.Text; Box.PlaceholderColor3 = Themes.Dark.TextSecondary
        Instance.new("UICorner", Box).CornerRadius = UDim.new(0, 8)
        Box.PlaceholderText = Translations[currentLang][placeholderKey]
        if isPassword then Box.TextXAlignment = Enum.TextXAlignment.Center; Box.TextScaled = true end
        return Box
    end

    local UserBox = createTextBox("login_user_placeholder", 70, false)
    local PassBox = createTextBox("login_pass_placeholder", 120, true)
    PassBox.ClearTextOnFocus = false

    local LoginBtn = Instance.new("TextButton", Frame)
    LoginBtn.Size = UDim2.new(0.6, 0, 0, 40); LoginBtn.Position = UDim2.new(0.2, 0, 0, 175); LoginBtn.BackgroundColor3 = Themes.Dark.Accent; LoginBtn.Font = Enum.Font.GothamBold; LoginBtn.TextSize = 18; LoginBtn.TextColor3 = Color3.new(1,1,1)
    LoginBtn.Text = Translations[currentLang]["login_btn"]
    Instance.new("UICorner", LoginBtn).CornerRadius = UDim.new(0, 8)

    local MsgLabel = Instance.new("TextLabel", Frame)
    MsgLabel.Size = UDim2.new(1, 0, 0, 20); MsgLabel.Position = UDim2.new(0, 0, 1, -25); MsgLabel.BackgroundTransparency = 1; MsgLabel.Font = Enum.Font.Gotham; MsgLabel.TextSize = 14; MsgLabel.TextColor3 = Color3.fromRGB(255, 120, 120)

    LoginBtn.MouseButton1Click:Connect(function()
        if UserBox.Text == "0_0lbr3" and PassBox.Text == "ilovethishub" then
            MsgLabel.Text = Translations[currentLang].login_success
            MsgLabel.TextColor3 = Color3.fromRGB(120, 255, 120)
            TweenService:Create(Frame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {Position = UDim2.new(0.5, -180, 1.5, 0)}):Play()
            task.wait(0.5)
            Gui:Destroy()
            onSuccess()
        else
            MsgLabel.Text = Translations[currentLang].login_fail
            local startPos = Frame.Position
            for i = 1, 5 do
                Frame.Position = startPos + UDim2.new(0, math.random(-5, 5), 0, 0)
                task.wait(0.05)
            end
            Frame.Position = startPos
        end
    end)
    
    TweenService:Create(Frame, TweenInfo.new(0.6, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Position = UDim2.new(0.5, -180, 0.5, -120)}):Play()
end

--// Initialize
local hubGui, toggleHubUI = createModernUI()
createLoginUI(function()
    hubGui.Parent = playerGui
    toggleHubUI(true)
end)
