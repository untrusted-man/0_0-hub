--//==========================================================================================================//--
--//                                                                                                          //--
--//                         0_0 Hub V2.3.4 - Final Hotfix (Updated September 25, 2025)                         //--
--//                                                                                                          //--
--//      This patch addresses the final remaining runtime errors for a stable experience.                    //--
--//      [FIXED] "toHex is not a valid member of Color3" error in AI chat by implementing a custom converter. //--
--//      [FIXED] "collectgarbage must be called with 'count'" error by updating to modern Luau syntax.       //--
--//                                                                                                          //--
--//==========================================================================================================//--


--// Core Services with Executor Compatibility
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")
local Lighting = game:GetService("Lighting")
local TeleportService = game:GetService("TeleportService")
local CoreGui = game:GetService("CoreGui")

-- Safe SoundService access (some executors may not have it)
local SoundService
pcall(function()
    SoundService = game:GetService("SoundService")
end)

--// Player Variables with Safety Checks
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui", 10)
if not playerGui then
    playerGui = player.PlayerGui -- Fallback for some executors
end

local mouse = player:GetMouse()

--// Global state for UI toggling
local hubGui, toggleHub

--// Executor Detection and Compatibility
local function detectExecutor()
    if syn and syn.protect_gui then
        return "Synapse"
    elseif getgenv and getgenv().ScriptWare then
        return "ScriptWare"
    elseif KRNL_LOADED then
        return "Krnl"
    elseif getexecutorname then
        return getexecutorname()
    elseif identifyexecutor then
        return identifyexecutor()
    elseif is_sirhurt_closure then
        return "SirHurt"
    elseif pebc_execute then
        return "ProtoSmasher"
    elseif SENTINEL then
        return "Sentinel"
    elseif WrapGlobal then
        return "WeAreDevs"
    else
        return "Unknown"
    end
end

local currentExecutor = detectExecutor()
print("üîç Detected Executor:", currentExecutor)

--// Configuration & State Management
local HubState = {
    Visible = false,
    CurrentTab = "Dashboard",
    CurrentTheme = "NeuralNet", -- New default theme
    CurrentLanguage = "en",
    Draggable = false,
    DragStart = nil,
    StartPos = nil,
    Particles = {},
    Connections = {},
    Notifications = {},
    Hotkeys = {},
    ScriptHistory = {},
    Favorites = {},
    AI_ChatHistory = {}, -- New state for AI chat
    Performance = {
        FPS = 60,
        Ping = 0,
        Memory = 0
    },
    ESPEnabled = false
}

--// Enhanced Localization System (8 Languages) - Updated with new keys for v2.3
local Languages = {
    en = {
        hub_title = "0_0 Hub AI Revolution",
        dashboard_tab = "Dashboard",
        scripts_tab = "Scripts",
        ai_assistant_tab = "AI Assistant", -- New Tab
        settings_tab = "Settings",
        info_tab = "Info",
        close_tooltip = "Close Hub",
        minimize_tooltip = "Minimize Hub",
        dashboard_welcome = "Welcome back, ",
        dashboard_subtitle = "AI-powered gaming experience at your command",
        performance_title = "System Performance",
        featured_script = "Featured Script",
        fps_label = "FPS",
        ping_label = "Ping",
        memory_label = "Memory",
        scripts_search = "Search scripts...",
        script_categories = "Categories",
        category_all = "All Scripts",
        category_visuals = "Visuals",
        category_movement = "Movement",
        category_combat = "Combat",
        category_utility = "Utility",
        category_fun = "Fun",
        anime_visuals = "üå∏ Anime Visuals UI",
        day_night_cycle = "‚òÄÔ∏è Day/Night UI",
        infinite_yield = "‚ö° Infinite Yield",
        esp_advanced = "üëÅÔ∏è Advanced ESP",
        fly_script = "üöÄ Enhanced Fly",
        speed_hack = "üí® Speed Booster",
        noclip = "üëª No Clip",
        god_mode = "üõ°Ô∏è God Mode",
        jump_power = "ü¶ò Jump Boost",
        rainbow_character = "üåà Rainbow Character",
        btools = "üõ†Ô∏è Building Tools", -- New
        infinite_jump = "‚ôæÔ∏è Infinite Jump", -- New
        anti_afk = "‚òï Anti-AFK", -- New
        fullbright = "üí° Fullbright",
        remove_fog = "üå´Ô∏è Remove Fog",
        teleport_to_player = "üìç Teleport to Player",
        ai_welcome_message = "Hello! I am the 0_0 Hub AI. How can I assist you today? You can ask me questions or request simple scripts like 'make me a speed script'.",
        ai_input_placeholder = "Ask the AI a question or request a script...",
        ai_generating_script = "Understood. Generating the requested script...",
        ai_unknown_command = "I'm sorry, I don't have enough information to respond to that. I am still learning! Try asking for help or a simple script.",
        theme_label = "Visual Theme",
        language_label = "Language",
        hotkeys_title = "Hotkey Settings",
        toggle_hub_key = "Toggle Hub",
        emergency_hide = "Emergency Hide",
        quick_execute = "Quick Execute",
        update_available = "Update Available!",
        script_executed = "Script executed successfully",
        error_occurred = "An error occurred",
        login_title = "üîê Secure Login",
        username_placeholder = "Enter username",
        password_placeholder = "Enter password",
        login_button = "Access Hub",
        login_success = "Access granted! Welcome to the hub.",
        login_failed = "Invalid credentials. Please try again.",
        version_info = "Hub Version: 2.3.4 AI Revolution\nLast Updated: September 25, 2025\n\nThis is a massive overhaul featuring a new AI Assistant and a completely redesigned user interface." -- Updated
    },
    es = {
        hub_title = "Centro 0_0 Revoluci√≥n AI",
        dashboard_tab = "Panel",
        scripts_tab = "Scripts",
        ai_assistant_tab = "Asistente IA",
        settings_tab = "Ajustes",
        info_tab = "Informaci√≥n",
        dashboard_welcome = "Bienvenido de nuevo, ",
        login_title = "üîê Inicio Seguro",
        username_placeholder = "Ingresa usuario",
        password_placeholder = "Ingresa contrase√±a",
        login_button = "Acceder al Hub",
        version_info = "Versi√≥n del Hub: 2.3.4 AI Revolution\n√öltima Actualizaci√≥n: 25 de septiembre de 2025",
        fullbright = "üí° Fullbright",
        remove_fog = "üå´Ô∏è Remover Niebla",
        teleport_to_player = "üìç Teleportar a Jugador"
    },
    fr = {
        hub_title = "Centre 0_0 R√©volution IA",
        dashboard_tab = "Tableau de bord",
        scripts_tab = "Scripts",
        ai_assistant_tab = "Assistant IA",
        settings_tab = "Param√®tres",
        info_tab = "Informations",
        dashboard_welcome = "Bon retour, ",
        login_title = "üîê Connexion S√©curis√©e",
        username_placeholder = "Nom d'utilisateur",
        password_placeholder = "Mot de passe",
        login_button = "Acc√©der au Hub",
        version_info = "Version du Hub : 2.3.4 AI Revolution\nDerni√®re Mise √† jour : 25 septembre 2025",
        fullbright = "üí° Fullbright",
        remove_fog = "üå´Ô∏è Supprimer le Brouillard",
        teleport_to_player = "üìç T√©l√©porter vers le Joueur"
    },
    de = {
        hub_title = "0_0 Hub KI-Revolution",
        dashboard_tab = "Dashboard",
        scripts_tab = "Skripte",
        ai_assistant_tab = "KI-Assistent",
        settings_tab = "Einstellungen",
        info_tab = "Info",
        dashboard_welcome = "Willkommen zur√ºck, ",
        login_title = "üîê Sichere Anmeldung",
        username_placeholder = "Benutzername eingeben",
        password_placeholder = "Passwort eingeben",
        login_button = "Hub √∂ffnen",
        version_info = "Hub-Version: 2.3.4 KI-Revolution\nLetztes Update: 25. September 2025",
        fullbright = "üí° Fullbright",
        remove_fog = "üå´Ô∏è Nebel Entfernen",
        teleport_to_player = "üìç Zu Spieler Teleportieren"
    },
    pt = {
        hub_title = "Centro 0_0 Revolu√ß√£o IA",
        dashboard_tab = "Painel",
        scripts_tab = "Scripts",
        ai_assistant_tab = "Assistente de IA",
        settings_tab = "Configura√ß√µes",
        info_tab = "Informa√ß√µes",
        dashboard_welcome = "Bem-vindo de volta, ",
        login_title = "üîê Login Seguro",
        username_placeholder = "Digite o usu√°rio",
        password_placeholder = "Digite a senha",
        login_button = "Acessar Hub",
        version_info = "Vers√£o do Hub: 2.3.4 Revolu√ß√£o IA\n√öltima Atualiza√ß√£o: 25 de setembro de 2025",
        fullbright = "üí° Fullbright",
        remove_fog = "üå´Ô∏è Remover N√©voa",
        teleport_to_player = "üìç Teleportar para Jogador"
    },
    ru = {
        hub_title = "–¶–µ–Ω—Ç—Ä 0_0 –ò–ò –†–µ–≤–æ–ª—é—Ü–∏—è",
        dashboard_tab = "–ü–∞–Ω–µ–ª—å",
        scripts_tab = "–°–∫—Ä–∏–ø—Ç—ã",
        ai_assistant_tab = "–ò–ò-–ü–æ–º–æ—â–Ω–∏–∫",
        settings_tab = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏",
        info_tab = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
        dashboard_welcome = "–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, ",
        login_title = "üîê –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –í—Ö–æ–¥",
        username_placeholder = "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        password_placeholder = "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å",
        login_button = "–í–æ–π—Ç–∏ –≤ Hub",
        version_info = "–í–µ—Ä—Å–∏—è –•–∞–±–∞: 2.3.4 –ò–ò –†–µ–≤–æ–ª—é—Ü–∏—è\n–ü–æ—Å–ª–µ–¥–Ω–µ–µ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: 25 —Å–µ–Ω—Ç—è–±—Ä—è 2025",
        fullbright = "üí° –ü–æ–ª–Ω–∞—è –Ø—Ä–∫–æ—Å—Ç—å",
        remove_fog = "üå´Ô∏è –£–¥–∞–ª–∏—Ç—å –¢—É–º–∞–Ω",
        teleport_to_player = "üìç –¢–µ–ª–µ–ø–æ—Ä—Ç –∫ –ò–≥—Ä–æ–∫—É"
    },
    ja = {
        hub_title = "0_0 „Éè„Éñ AIÈù©ÂëΩ",
        dashboard_tab = "„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ",
        scripts_tab = "„Çπ„ÇØ„É™„Éó„Éà",
        ai_assistant_tab = "AI„Ç¢„Ç∑„Çπ„Çø„É≥„Éà",
        settings_tab = "Ë®≠ÂÆö",
        info_tab = "ÊÉÖÂ†±",
        dashboard_welcome = "„Åä„Åã„Åà„Çä„Å™„Åï„ÅÑ„ÄÅ",
        login_title = "üîê „Çª„Ç≠„É•„Ç¢„É≠„Ç∞„Ç§„É≥",
        username_placeholder = "„É¶„Éº„Ç∂„ÉºÂêç„ÇíÂÖ•Âäõ",
        password_placeholder = "„Éë„Çπ„ÉØ„Éº„Éâ„ÇíÂÖ•Âäõ",
        login_button = "„Éè„Éñ„Å´„Ç¢„ÇØ„Çª„Çπ",
        version_info = "„Éè„Éñ„Éê„Éº„Ç∏„Éß„É≥: 2.3.4 AIÈù©ÂëΩ\nÊúÄÁµÇÊõ¥Êñ∞: 2025Âπ¥9Êúà25Êó•",
        fullbright = "üí° „Éï„É´„Éñ„É©„Ç§„Éà",
        remove_fog = "üå´Ô∏è Èúß„ÇíÈô§Âéª",
        teleport_to_player = "üìç „Éó„É¨„Ç§„É§„Éº„Å∏„ÉÜ„É¨„Éù„Éº„Éà"
    },
    ko = {
        hub_title = "0_0 ÌóàÎ∏å AI ÌòÅÎ™Ö",
        dashboard_tab = "ÎåÄÏãúÎ≥¥Îìú",
        scripts_tab = "Ïä§ÌÅ¨Î¶ΩÌä∏",
        ai_assistant_tab = "AI Ïñ¥ÏãúÏä§ÌÑ¥Ìä∏",
        settings_tab = "ÏÑ§Ï†ï",
        info_tab = "Ï†ïÎ≥¥",
        dashboard_welcome = "Îã§Ïãú Ïò§Ïã† Í≤ÉÏùÑ ÌôòÏòÅÌï©ÎãàÎã§, ",
        login_title = "üîê Î≥¥Ïïà Î°úÍ∑∏Ïù∏",
        username_placeholder = "ÏÇ¨Ïö©ÏûêÎ™Ö ÏûÖÎ†•",
        password_placeholder = "ÎπÑÎ∞ÄÎ≤àÌò∏ ÏûÖÎ†•",
        login_button = "ÌóàÎ∏å Ï†ëÏÜç",
        version_info = "ÌóàÎ∏å Î≤ÑÏ†Ñ: 2.3.4 AI ÌòÅÎ™Ö\nÎßàÏßÄÎßâ ÏóÖÎç∞Ïù¥Ìä∏: 2025ÎÖÑ 9Ïõî 25Ïùº",
        fullbright = "üí° ÌíÄÎ∏åÎùºÏù¥Ìä∏",
        remove_fog = "üå´Ô∏è ÏïàÍ∞ú Ï†úÍ±∞",
        teleport_to_player = "üìç ÌîåÎ†àÏù¥Ïñ¥Î°ú ÌÖîÎ†àÌè¨Ìä∏"
    }
}


--// Premium Theme System (13 Themes) - Added 'NeuralNet'
local Themes = {
    NeuralNet = { -- New Theme for v2.3
        Background = Color3.fromRGB(10, 12, 18),
        BackgroundTransparency = 0.1,
        Secondary = Color3.fromRGB(18, 20, 28),
        SecondaryTransparency = 0.2,
        Primary = Color3.fromRGB(25, 28, 38),
        PrimaryTransparency = 0.1,
        Accent = Color3.fromRGB(0, 225, 180),
        AccentGlow = Color3.fromRGB(100, 255, 220),
        Text = Color3.fromRGB(230, 240, 255),
        TextSecondary = Color3.fromRGB(150, 160, 180),
        Blur = true,
        Particles = true,
        Glow = true
    },
    Glassmorphism = {
        Background = Color3.fromRGB(15, 15, 25),
        BackgroundTransparency = 0.3,
        Secondary = Color3.fromRGB(25, 25, 40),
        SecondaryTransparency = 0.4,
        Primary = Color3.fromRGB(40, 40, 60),
        PrimaryTransparency = 0.2,
        Accent = Color3.fromRGB(120, 110, 255),
        AccentGlow = Color3.fromRGB(180, 170, 255),
        Text = Color3.fromRGB(255, 255, 255),
        TextSecondary = Color3.fromRGB(200, 200, 220),
        Blur = true,
        Particles = true,
        Glow = true
    },
    CyberNeon = {
        Background = Color3.fromRGB(5, 5, 15),
        BackgroundTransparency = 0.1,
        Secondary = Color3.fromRGB(15, 15, 30),
        SecondaryTransparency = 0.2,
        Primary = Color3.fromRGB(20, 20, 40),
        PrimaryTransparency = 0.1,
        Accent = Color3.fromRGB(0, 255, 150),
        AccentGlow = Color3.fromRGB(0, 255, 200),
        Text = Color3.fromRGB(0, 255, 200),
        TextSecondary = Color3.fromRGB(100, 255, 180),
        Blur = false,
        Particles = true,
        Glow = true
    },
    Sunset = {
        Background = Color3.fromRGB(25, 15, 35),
        BackgroundTransparency = 0.2,
        Secondary = Color3.fromRGB(40, 25, 50),
        SecondaryTransparency = 0.3,
        Primary = Color3.fromRGB(60, 35, 70),
        PrimaryTransparency = 0.2,
        Accent = Color3.fromRGB(255, 120, 80),
        AccentGlow = Color3.fromRGB(255, 160, 120),
        Text = Color3.fromRGB(255, 240, 220),
        TextSecondary = Color3.fromRGB(255, 200, 180),
        Blur = true,
        Particles = true,
        Glow = true
    },
    Ocean = {
        Background = Color3.fromRGB(10, 20, 40),
        BackgroundTransparency = 0.2,
        Secondary = Color3.fromRGB(20, 35, 60),
        SecondaryTransparency = 0.3,
        Primary = Color3.fromRGB(30, 50, 80),
        PrimaryTransparency = 0.2,
        Accent = Color3.fromRGB(0, 170, 255),
        AccentGlow = Color3.fromRGB(50, 200, 255),
        Text = Color3.fromRGB(220, 240, 255),
        TextSecondary = Color3.fromRGB(180, 220, 255),
        Blur = true,
        Particles = true,
        Glow = false
    },
    Forest = {
        Background = Color3.fromRGB(15, 25, 15),
        BackgroundTransparency = 0.2,
        Secondary = Color3.fromRGB(25, 40, 25),
        SecondaryTransparency = 0.3,
        Primary = Color3.fromRGB(35, 60, 35),
        PrimaryTransparency = 0.2,
        Accent = Color3.fromRGB(100, 200, 100),
        AccentGlow = Color3.fromRGB(120, 255, 120),
        Text = Color3.fromRGB(220, 255, 220),
        TextSecondary = Color3.fromRGB(180, 220, 180),
        Blur = true,
        Particles = true,
        Glow = false
    },
    Pastel = {
        Background = Color3.fromRGB(255, 240, 250),
        BackgroundTransparency = 0.1,
        Secondary = Color3.fromRGB(255, 220, 240),
        SecondaryTransparency = 0.2,
        Primary = Color3.fromRGB(255, 200, 230),
        PrimaryTransparency = 0.1,
        Accent = Color3.fromRGB(255, 105, 180),
        AccentGlow = Color3.fromRGB(255, 150, 200),
        Text = Color3.fromRGB(80, 40, 60),
        TextSecondary = Color3.fromRGB(120, 80, 100),
        Blur = false,
        Particles = true,
        Glow = false
    },
    Monochrome = {
        Background = Color3.fromRGB(20, 20, 20),
        BackgroundTransparency = 0.1,
        Secondary = Color3.fromRGB(40, 40, 40),
        SecondaryTransparency = 0.2,
        Primary = Color3.fromRGB(60, 60, 60),
        PrimaryTransparency = 0.1,
        Accent = Color3.fromRGB(255, 255, 255),
        AccentGlow = Color3.fromRGB(200, 200, 200),
        Text = Color3.fromRGB(255, 255, 255),
        TextSecondary = Color3.fromRGB(180, 180, 180),
        Blur = false,
        Particles = false,
        Glow = false
    },
    Galaxy = {
        Background = Color3.fromRGB(5, 0, 20),
        BackgroundTransparency = 0.2,
        Secondary = Color3.fromRGB(15, 5, 35),
        SecondaryTransparency = 0.3,
        Primary = Color3.fromRGB(25, 10, 50),
        PrimaryTransparency = 0.2,
        Accent = Color3.fromRGB(150, 50, 255),
        AccentGlow = Color3.fromRGB(200, 100, 255),
        Text = Color3.fromRGB(240, 220, 255),
        TextSecondary = Color3.fromRGB(200, 180, 255),
        Blur = true,
        Particles = true,
        Glow = true
    },
    Fire = {
        Background = Color3.fromRGB(30, 10, 5),
        BackgroundTransparency = 0.2,
        Secondary = Color3.fromRGB(50, 20, 10),
        SecondaryTransparency = 0.3,
        Primary = Color3.fromRGB(70, 30, 15),
        PrimaryTransparency = 0.2,
        Accent = Color3.fromRGB(255, 100, 50),
        AccentGlow = Color3.fromRGB(255, 150, 100),
        Text = Color3.fromRGB(255, 220, 200),
        TextSecondary = Color3.fromRGB(255, 180, 150),
        Blur = false,
        Particles = true,
        Glow = true
    },
    Ice = {
        Background = Color3.fromRGB(200, 230, 255),
        BackgroundTransparency = 0.3,
        Secondary = Color3.fromRGB(220, 240, 255),
        SecondaryTransparency = 0.4,
        Primary = Color3.fromRGB(180, 220, 255),
        PrimaryTransparency = 0.2,
        Accent = Color3.fromRGB(100, 200, 255),
        AccentGlow = Color3.fromRGB(150, 220, 255),
        Text = Color3.fromRGB(20, 50, 100),
        TextSecondary = Color3.fromRGB(50, 80, 120),
        Blur = true,
        Particles = true,
        Glow = false
    },
    Retro = {
        Background = Color3.fromRGB(40, 20, 60),
        BackgroundTransparency = 0.1,
        Secondary = Color3.fromRGB(60, 30, 90),
        SecondaryTransparency = 0.2,
        Primary = Color3.fromRGB(80, 40, 120),
        PrimaryTransparency = 0.1,
        Accent = Color3.fromRGB(255, 0, 150),
        AccentGlow = Color3.fromRGB(255, 50, 180),
        Text = Color3.fromRGB(255, 255, 255),
        TextSecondary = Color3.fromRGB(255, 200, 255),
        Blur = false,
        Particles = true,
        Glow = true
    },
    Matrix = {
        Background = Color3.fromRGB(0, 0, 0),
        BackgroundTransparency = 0.1,
        Secondary = Color3.fromRGB(5, 15, 5),
        SecondaryTransparency = 0.2,
        Primary = Color3.fromRGB(10, 25, 10),
        PrimaryTransparency = 0.1,
        Accent = Color3.fromRGB(0, 255, 0),
        AccentGlow = Color3.fromRGB(50, 255, 50),
        Text = Color3.fromRGB(0, 255, 0),
        TextSecondary = Color3.fromRGB(0, 200, 0),
        Blur = false,
        Particles = true,
        Glow = true
    }
}


--// Enhanced Script Library - Expanded and Fixed for v2.3.2
local ScriptLibrary = {
    {
        name = "btools", -- FIXED
        category = "utility",
        premium = false,
        description = "Gives you functional building tools.",
        func = function()
            for _, toolName in ipairs({"Build", "Destroy", "Move"}) do
                local tool = Instance.new("Tool")
                tool.Name = toolName
                tool.Parent = player.Backpack
            end
            showNotification("Building Tools added to your backpack!", "success")
        end
    },
    {
        name = "infinite_jump",
        category = "movement",
        premium = false,
        description = "Allows you to jump infinitely in mid-air.",
        func = function()
            local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
            if not humanoid then
                showNotification("Humanoid not found!", "error")
                return
            end
            
            local ijConnection = UserInputService.InputBegan:Connect(function(input)
                if input.KeyCode == Enum.KeyCode.Space then
                    if humanoid:GetState() == Enum.HumanoidStateType.Freefall then
                        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                    end
                end
            end)
            table.insert(HubState.Connections, ijConnection)
            showNotification("Infinite Jump enabled! Press Space to jump mid-air.", "success")
        end
    },
    {
        name = "anti_afk",
        category = "utility",
        premium = false,
        description = "Prevents you from being kicked for being idle.",
        func = function()
            local VirtualUser = game:GetService("VirtualUser")
            player.Idled:Connect(function()
                VirtualUser:ClickButton2(Vector2.new())
            end)
            showNotification("Anti-AFK is now active!", "success")
        end
    },
    {
        name = "anime_visuals",
        category = "visuals",
        premium = false,
        description = "Anime-style visuals with a UI for customization",
        func = function()
            local Players = game:GetService("Players")
            local Lighting = game:GetService("Lighting")
            local TweenService = game:GetService("TweenService")
            local UserInputService = game:GetService("UserInputService")
            local player = Players.LocalPlayer
            local playerGui = player:WaitForChild("PlayerGui")
            local camera = workspace.CurrentCamera
            
            if playerGui:FindFirstChild("AnimeVisualsGUI") then
                playerGui.AnimeVisualsGUI:Destroy()
            end
            
            local function createEffect(class, name, props)
                local e = Lighting:FindFirstChild(name) or Instance.new(class)
                e.Name = name
                e.Parent = Lighting
                for k, v in pairs(props) do
                    pcall(function() e[k] = v end)
                end
                return e
            end
      
            local cc = createEffect("ColorCorrectionEffect", "Anime_CC", { Enabled = true, Brightness = 0, Contrast = 0.2, Saturation = 0.3, TintColor = Color3.fromRGB(255, 230, 240) })
            local bloom = createEffect("BloomEffect", "Anime_Bloom", { Enabled = true, Intensity = 1.2, Threshold = 0.6, Size = 56 })
            local sun = createEffect("SunRaysEffect", "Anime_Sun", { Enabled = true, Intensity = 0.1 })
            local dof = createEffect("DepthOfFieldEffect", "Anime_DoF", { Enabled = false, FocusDistance = 60, InFocusRadius = 12, FarIntensity = 0.7 })
   
            local function tween(obj, props, t) TweenService:Create(obj, TweenInfo.new(t or 0.3, Enum.EasingStyle.Sine), props):Play() end

            local gui = Instance.new("ScreenGui")
            gui.Name = "AnimeVisualsGUI"
            gui.ResetOnSpawn = false
            gui.Parent = playerGui
            local main = Instance.new("Frame")
            main.Size = UDim2.new(0, 420, 0, 360)
            main.Position = UDim2.new(0.5, -210, 0.85, -180)
            main.AnchorPoint = Vector2.new(0.5, 0.5)
            main.BackgroundColor3 = Color3.fromRGB(25, 25, 40)
            main.BackgroundTransparency = 0.15
            main.BorderSizePixel = 0
            main.Parent = gui
            main.Active = true
            main.Draggable = true
            Instance.new("UICorner", main).CornerRadius = UDim.new(0, 18)
            local title = Instance.new("TextLabel")
            title.Size = UDim2.new(1, -40, 0, 40)
            title.Position = UDim2.new(0, 20, 0, 0)
            title.BackgroundTransparency = 1
            title.Text = "üå∏ Anime Visuals üå∏"
            title.Font = Enum.Font.GothamBold
            title.TextSize = 20
            title.TextColor3 = Color3.fromRGB(250, 240, 255)
            title.TextXAlignment = Enum.TextXAlignment.Left
            title.Parent = main
            local closeBtn = Instance.new("TextButton")
            closeBtn.Size = UDim2.new(0, 32, 0, 32)
            closeBtn.Position = UDim2.new(1, -40, 0, 8)
            closeBtn.BackgroundColor3 = Color3.fromRGB(80, 40, 40)
            closeBtn.Text = "X"
            closeBtn.TextColor3 = Color3.fromRGB(255, 220, 220)
            closeBtn.Font = Enum.Font.GothamBold
            closeBtn.TextSize = 16
            closeBtn.Parent = main
            Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(0, 8)
            local toggle = Instance.new("TextButton")
            toggle.Size = UDim2.new(0, 120, 0, 28)
            toggle.Position = UDim2.new(0.5, -60, 1, -40)
            toggle.AnchorPoint = Vector2.new(0.5, 0)
            toggle.BackgroundColor3 = Color3.fromRGB(60, 50, 120)
            toggle.Text = "Disable"
            toggle.TextColor3 = Color3.fromRGB(240, 240, 255)
            toggle.Font = Enum.Font.Gotham
            toggle.TextSize = 14
            toggle.Parent = main
            Instance.new("UICorner", toggle).CornerRadius = UDim.new(0, 8)
            local content = Instance.new("Frame")
            content.Size = UDim2.new(1, -20, 1, -110)
            content.Position = UDim2.new(0, 10, 0, 50)
            content.BackgroundTransparency = 1
            content.Parent = main
            local presets = Instance.new("Frame")
            presets.Size = UDim2.new(1, 0, 0, 36)
            presets.BackgroundTransparency = 1
            presets.Parent = content
            local function makePreset(x, text, color)
                local b = Instance.new("TextButton")
                b.Size = UDim2.new(0.3, 0, 1, 0)
                b.Position = UDim2.new(x, 0, 0, 0)
                b.BackgroundColor3 = color
                b.Text = text
                b.TextColor3 = Color3.fromRGB(255, 255, 255)
                b.Font = Enum.Font.GothamBold
                b.TextSize = 14
                b.Parent = presets
                Instance.new("UICorner", b).CornerRadius = UDim.new(0, 10)
                return b
            end
            local p1 = makePreset(0.0, "Pastel", Color3.fromRGB(150, 100, 200))
            local p2 = makePreset(0.35, "Contrast", Color3.fromRGB(100, 180, 240))
            local p3 = makePreset(0.7, "Sunset", Color3.fromRGB(255, 120, 120))
            local y = 50
            local draggingSlider = nil
            local function createSlider(labelText, min, max, default, callback)
                local container = Instance.new("Frame")
                container.Size = UDim2.new(1, 0, 0, 46)
                container.Position = UDim2.new(0, 0, 0, y)
                container.BackgroundTransparency = 1
                container.Parent = content
                local label = Instance.new("TextLabel")
                label.Size = UDim2.new(0.4, 0, 1, -14)
                label.BackgroundTransparency = 1
                label.Text = labelText
                label.TextColor3 = Color3.fromRGB(230, 230, 255)
                label.Font = Enum.Font.Gotham
                label.TextSize = 14
                label.TextXAlignment = Enum.TextXAlignment.Left
                label.Parent = container
                local bar = Instance.new("Frame")
                bar.Size = UDim2.new(0.55, 0, 0, 6)
                bar.Position = UDim2.new(0.42, 0, 0.6, 0)
                bar.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
                bar.BorderSizePixel = 0
                bar.Parent = container
                Instance.new("UICorner", bar).CornerRadius = UDim.new(0, 4)
                local fill = Instance.new("Frame")
                fill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
                fill.BackgroundColor3 = Color3.fromRGB(180, 120, 230)
                fill.BorderSizePixel = 0
                fill.Parent = bar
                Instance.new("UICorner", fill).CornerRadius = UDim.new(0, 4)
                local knob = Instance.new("Frame")
                knob.Size = UDim2.new(0, 12, 0, 12)
                knob.Position = UDim2.new(fill.Size.X.Scale, -6, 0.5, -6)
                knob.BackgroundColor3 = Color3.fromRGB(250, 250, 255)
                knob.BorderSizePixel = 0
                knob.Parent = bar
                Instance.new("UICorner", knob).CornerRadius = UDim.new(1, 0)
                local function updateFromX(x)
                    local rel = math.clamp((x - bar.AbsolutePosition.X) / bar.AbsoluteSize.X, 0, 1)
                    fill.Size = UDim2.new(rel, 0, 1, 0)
                    knob.Position = UDim2.new(rel, -6, 0.5, -6)
                    callback(min + (max - min) * rel)
                end
                knob.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 then draggingSlider = { update = updateFromX } end end)
                bar.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 then updateFromX(input.Position.X) draggingSlider = { update = updateFromX } end end)
                y = y + 50
                callback(default)
            end
            UserInputService.InputChanged:Connect(function(input) if draggingSlider and input.UserInputType == Enum.UserInputType.MouseMovement then draggingSlider.update(input.Position.X) end end)
            UserInputService.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 then draggingSlider = nil end end)
            createSlider("Saturation", -1, 2, 0.3, function(v) cc.Saturation = v end)
            createSlider("Contrast", -1, 2, 0.2, function(v) cc.Contrast = v end)
            createSlider("Bloom", 0, 3, 1.2, function(v) bloom.Intensity = v end)
            createSlider("FOV", 50, 100, 70, function(v) camera.FieldOfView = v end)
            local function applyPreset(id)
                if id == 1 then cc.Saturation = 0.6; cc.Contrast = 0.15; bloom.Intensity = 1; camera.FieldOfView = 75
                elseif id == 2 then cc.Saturation = -0.1; cc.Contrast = 0.6; bloom.Intensity = 1.6; camera.FieldOfView = 68
                elseif id == 3 then cc.Saturation = 0.3; cc.Contrast = 0.2; bloom.Intensity = 1.4; camera.FieldOfView = 72
                end
            end
            p1.MouseButton1Click:Connect(function() applyPreset(1) end)
            p2.MouseButton1Click:Connect(function() applyPreset(2) end)
            p3.MouseButton1Click:Connect(function() applyPreset(3) end)
            local enabled = true
            toggle.MouseButton1Click:Connect(function()
                enabled = not enabled
                toggle.Text = enabled and "Disable" or "Enable"
                cc.Enabled, bloom.Enabled, sun.Enabled, dof.Enabled = enabled, enabled, enabled, enabled
            end)
            closeBtn.MouseButton1Click:Connect(function()
                gui:Destroy()
                pcall(function() Lighting.Anime_CC:Destroy(); Lighting.Anime_Bloom:Destroy(); Lighting.Anime_Sun:Destroy(); Lighting.Anime_DoF:Destroy() end)
            end)
            main.Position = UDim2.new(0.5, -210, 1.2, 0)
            tween(main, { Position = UDim2.new(0.5, -210, 0.85, -180) }, 0.6)
        end
    },
    {
        name = "day_night_cycle",
        category = "visuals",
        premium = false,
        description = "Opens a UI to control the time of day.",
        func = function()
            if playerGui:FindFirstChild("DayNightUI") then playerGui.DayNightUI:Destroy() end
            local screenGui = Instance.new("ScreenGui", playerGui)
            screenGui.Name = "DayNightUI"; screenGui.ResetOnSpawn = false
            local mainFrame = Instance.new("Frame", screenGui)
            mainFrame.Size = UDim2.new(0,300,0,180); mainFrame.Position = UDim2.new(0.5,-150,0.8,-90); mainFrame.AnchorPoint = Vector2.new(0.5,0.5); mainFrame.BackgroundColor3 = Color3.fromRGB(28,28,30); mainFrame.BorderSizePixel = 0; mainFrame.Active = true
            Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0,12)
            local title = Instance.new("TextLabel", mainFrame)
            title.Size = UDim2.new(1, -60,0,36); title.Position = UDim2.new(0,16,0,8); title.BackgroundTransparency = 1; title.Text = "Day/Night UI"; title.Font = Enum.Font.GothamBold; title.TextSize = 20; title.TextColor3 = Color3.fromRGB(235,235,235); title.TextXAlignment = Enum.TextXAlignment.Left
            local minBtn = Instance.new("TextButton", mainFrame)
            minBtn.Size = UDim2.new(0,28,0,28); minBtn.Position = UDim2.new(1,-44,0,8); minBtn.Text = "‚Äî"; minBtn.Font = Enum.Font.GothamBold; minBtn.TextSize = 18; minBtn.TextColor3 = Color3.fromRGB(255,255,255); minBtn.BackgroundColor3 = Color3.fromRGB(64,64,64); Instance.new("UICorner", minBtn).CornerRadius = UDim.new(0,6)
            local sliderFrame = Instance.new("Frame", mainFrame)
            sliderFrame.Size = UDim2.new(0,260,0,20); sliderFrame.Position = UDim2.new(0,20,0,60); sliderFrame.BackgroundColor3 = Color3.fromRGB(50,50,50); Instance.new("UICorner", sliderFrame).CornerRadius = UDim.new(0,10)
            local knob = Instance.new("Frame", sliderFrame)
            knob.Size = UDim2.new(0,20,1,0); knob.BackgroundColor3 = Color3.fromRGB(255,200,50); Instance.new("UICorner", knob).CornerRadius = UDim.new(0,10)
            local timeLabel = Instance.new("TextLabel", mainFrame)
            timeLabel.Size = UDim2.new(1,0,0,24); timeLabel.Position = UDim2.new(0,0,0,100); timeLabel.BackgroundTransparency = 1; timeLabel.Text = "Time: 12:00"; timeLabel.Font = Enum.Font.Gotham; timeLabel.TextSize = 18; timeLabel.TextColor3 = Color3.fromRGB(235,235,235); timeLabel.TextXAlignment = Enum.TextXAlignment.Center
            local function makeBtn(text,posX) local btn = Instance.new("TextButton", mainFrame); btn.Size = UDim2.new(0,60,0,30); btn.Position = UDim2.new(0,posX,0,140); btn.BackgroundColor3 = Color3.fromRGB(100,150,255); btn.Text = text; btn.Font = Enum.Font.GothamBold; btn.TextSize = 16; btn.TextColor3 = Color3.fromRGB(255,255,255); Instance.new("UICorner", btn).CornerRadius = UDim.new(0,8); return btn end
            local dayBtn, nightBtn = makeBtn("Day", 80), makeBtn("Night", 160)
            local function updateLighting(timeOfDay) Lighting.ClockTime = timeOfDay; timeLabel.Text = string.format("Time: %02d:%02d", math.floor(timeOfDay), math.floor((timeOfDay - math.floor(timeOfDay))*60)) end
            local draggingKnob = false
            knob.InputBegan:Connect(function(i) if i.UserInputType == Enum.UserInputType.MouseButton1 then draggingKnob = true end end); knob.InputEnded:Connect(function(i) if i.UserInputType == Enum.UserInputType.MouseButton1 then draggingKnob = false end end)
            UserInputService.InputChanged:Connect(function(i) if draggingKnob and i.UserInputType == Enum.UserInputType.MouseMovement then local p = math.clamp(i.Position.X - sliderFrame.AbsolutePosition.X, 0, sliderFrame.AbsoluteSize.X); knob.Position = UDim2.new(0, p - knob.AbsoluteSize.X/2, 0, 0); updateLighting((p / sliderFrame.AbsoluteSize.X) * 24) end end)
            dayBtn.MouseButton1Click:Connect(function() knob.Position = UDim2.new(0.5, -knob.AbsoluteSize.X/2, 0, 0); updateLighting(12) end)
            nightBtn.MouseButton1Click:Connect(function() knob.Position = UDim2.new(0,0,0,0); updateLighting(0) end)
            updateLighting(12); knob.Position = UDim2.new(0.5, -knob.AbsoluteSize.X/2, 0, 0)
        end
    },
    {
        name = "infinite_yield",
        category = "utility",
        premium = false,
        description = "The classic admin commands script",
        func = function()
            loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
            showNotification("Infinite Yield loaded!", "success")
        end
    },
    {
        name = "esp_advanced",
        category = "combat",
        premium = false,
        description = "Advanced ESP with customizable features",
        func = function() toggleAdvancedESP() end
    },
    {
        name = "fly_script",
        category = "movement",
        premium = false,
        description = "Enhanced fly script with speed controls",
        func = function()
            local flying = false
            local speed = 50
            local bodyVelocity, bodyAngularVelocity
            
            local function startFly()
                local char = player.Character
                if not char or not char:FindFirstChild("HumanoidRootPart") then return end
                local humanoidRootPart = char.HumanoidRootPart
                
                bodyVelocity = Instance.new("BodyVelocity")
                bodyAngularVelocity = Instance.new("BodyAngularVelocity")
                
                bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                bodyVelocity.Parent = humanoidRootPart
                
                bodyAngularVelocity.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
                bodyAngularVelocity.AngularVelocity = Vector3.new(0, 0, 0)
                bodyAngularVelocity.Parent = humanoidRootPart
                
                flying = true
            end
            
            local function stopFly()
                flying = false
                if bodyVelocity then bodyVelocity:Destroy() end
                if bodyAngularVelocity then bodyAngularVelocity:Destroy() end
            end
            
            -- Toggle with F key
            local flyConnection = UserInputService.InputBegan:Connect(function(input)
                if input.KeyCode == Enum.KeyCode.F then
                    if flying then
                        stopFly()
                        showNotification("Fly disabled", "info")
                    else
                        startFly()
                        showNotification("Fly enabled - Use WASD to move", "success")
                    end
                end
            end)
    
            table.insert(HubState.Connections, flyConnection)
        end
    },
    {
        name = "speed_hack",
        category = "movement",
        premium = false,
        description = "Boost your character's speed",
        func = function()
            local char = player.Character
            if char and char:FindFirstChild("Humanoid") then
                char.Humanoid.WalkSpeed = 100
                showNotification("Speed boosted to 100!", "success")
            end
        end
    },
    {
        name = "noclip",
        category = "movement",
        premium = false,
        description = "Toggle noclip to pass through walls",
        func = function()
            local noclip = false
            local function toggleNoclip()
                noclip = not noclip
                local char = player.Character
                if char then
                    for _, part in pairs(char:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.CanCollide = not noclip
                        end
                    end
                end
                showNotification("Noclip " .. (noclip and "enabled" or "disabled"), "success")
            end
            toggleNoclip()
            local noclipConnection = UserInputService.InputBegan:Connect(function(input)
                if input.KeyCode == Enum.KeyCode.N then toggleNoclip() end
            end)
            table.insert(HubState.Connections, noclipConnection)
        end
    },
    {
        name = "god_mode",
        category = "combat",
        premium = false,
        description = "Enable god mode for invincibility with health regen",
        func = function()
            local char = player.Character
            if char and char:FindFirstChild("Humanoid") then
                local humanoid = char.Humanoid
                humanoid.MaxHealth = math.huge
                humanoid.Health = math.huge
                
                -- Regenerate health if damaged
                local regenConnection = humanoid.HealthChanged:Connect(function(health)
                    if health < math.huge then
                        task.wait()
                        humanoid.Health = math.huge
                    end
                end)
                table.insert(HubState.Connections, regenConnection)
                
                showNotification("God mode enabled with auto-regen!", "success")
            else
                showNotification("Character not found for god mode!", "error")
            end
        end
    },
    {
        name = "auto_farm",
        category = "utility",
        premium = false,
        description = "Automated farming script",
        func = function()
            spawn(function()
                while wait(1) do
                    for _, obj in pairs(workspace:GetDescendants()) do
                        if obj:IsA("ClickDetector") then
                            fireclickdetector(obj)
                        end
                    end
                end
            end)
            showNotification("Auto-farm started! (Game-specific tweaks may be needed)", "success")
        end
    },
    {
        name = "rainbow_character",
        category = "fun",
        premium = false,
        description = "Make your character rainbow colored",
        func = function()
            local char = player.Character
            if char then
                spawn(function()
                    while wait(0.1) do
                        for _, part in pairs(char:GetChildren()) do
                            if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                                part.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
                            end
                        end
                    end
                end)
                showNotification("Rainbow character enabled!", "success")
            end
        end
    },
    {
        name = "jump_power",
        category = "movement",
        premium = false,
        description = "Boost your jump power",
        func = function()
            local char = player.Character
            if char and char:FindFirstChild("Humanoid") then
                char.Humanoid.JumpPower = 100
                showNotification("Jump power boosted to 100!", "success")
            end
        end
    },
    {
        name = "teleport_to_player", -- FIXED
        category = "utility",
        premium = false,
        description = "Opens a UI to teleport to a player",
        func = function()
            if playerGui:FindFirstChild("PlayerTeleportUI") then
                playerGui.PlayerTeleportUI:Destroy()
            end

            local screenGui = Instance.new("ScreenGui")
            screenGui.Name = "PlayerTeleportUI"
            screenGui.Parent = playerGui
            screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

            local mainFrame = Instance.new("Frame")
            mainFrame.Size = UDim2.new(0, 250, 0, 300)
            mainFrame.Position = UDim2.new(0.5, -125, 0.5, -150)
            mainFrame.BackgroundColor3 = Themes[HubState.CurrentTheme].Primary
            mainFrame.BorderSizePixel = 0
            mainFrame.Parent = screenGui
            Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 12)

            local title = Instance.new("TextLabel")
            title.Size = UDim2.new(1, 0, 0, 40)
            title.BackgroundTransparency = 1
            title.Text = "Select a Player"
            title.Font = Enum.Font.GothamBold
            title.TextSize = 20
            title.TextColor3 = Themes[HubState.CurrentTheme].Text
            title.Parent = mainFrame
            
            local closeBtn = Instance.new("TextButton")
            closeBtn.Size = UDim2.new(0,25,0,25); closeBtn.Position=UDim2.new(1,-30,0,8); closeBtn.Text="X"; closeBtn.Font=Enum.Font.GothamBold; closeBtn.TextColor3=Themes[HubState.CurrentTheme].Text
            closeBtn.BackgroundTransparency = 1; closeBtn.Parent=mainFrame
            closeBtn.MouseButton1Click:Connect(function() screenGui:Destroy() end)

            local scroll = Instance.new("ScrollingFrame")
            scroll.Size = UDim2.new(1, -20, 1, -50)
            scroll.Position = UDim2.new(0, 10, 0, 40)
            scroll.BackgroundTransparency = 1
            scroll.BorderSizePixel = 0
            scroll.Parent = mainFrame
            
            local list = Instance.new("UIListLayout")
            list.Padding = UDim.new(0, 5)
            list.Parent = scroll

            for _, targetPlayer in ipairs(Players:GetPlayers()) do
                if targetPlayer ~= player then
                    local button = Instance.new("TextButton")
                    button.Size = UDim2.new(1, 0, 0, 35)
                    button.BackgroundColor3 = Themes[HubState.CurrentTheme].Secondary
                    button.Text = targetPlayer.DisplayName
                    button.Font = Enum.Font.Gotham
                    button.TextColor3 = Themes[HubState.CurrentTheme].TextSecondary
                    button.Parent = scroll
                    Instance.new("UICorner", button).CornerRadius = UDim.new(0, 8)

                    button.MouseButton1Click:Connect(function()
                        local localChar = player.Character
                        local targetChar = targetPlayer.Character
                        if localChar and targetChar and localChar:FindFirstChild("HumanoidRootPart") and targetChar:FindFirstChild("HumanoidRootPart") then
                            localChar.HumanoidRootPart.CFrame = targetChar.HumanoidRootPart.CFrame
                            showNotification("Teleported to " .. targetPlayer.DisplayName, "success")
                            screenGui:Destroy()
                        else
                            showNotification("Could not teleport to " .. targetPlayer.DisplayName, "error")
                        end
                    end)
                end
            end
        end
    },
    {
        name = "aimbot",
        category = "combat",
        premium = false,
        description = "Aimbot with Q toggle. Click again to disable.",
        func = function()
            if getgenv().aimbotActive then
                getgenv().aimbotActive = false
                if getgenv().aimbotToggleConnection then getgenv().aimbotToggleConnection:Disconnect() end
                if getgenv().aimbotHeartbeatConnection then getgenv().aimbotHeartbeatConnection:Disconnect() end
                getgenv().aimbotToggleConnection = nil
                getgenv().aimbotHeartbeatConnection = nil
                showNotification("Aimbot system deactivated.", "info")
                return
            end

            getgenv().aimbotActive = true
            local aimbotEnabled = true
            local Camera = workspace.CurrentCamera
            local LocalPlayer = player

            local function findClosestEnemy()
                local closestPlayer = nil
                local shortestDistance = math.huge
                
                for _, p in pairs(Players:GetPlayers()) do
                    if p ~= LocalPlayer and p.Character and p.Character:FindFirstChild("Head") then
                        local targetHead = p.Character.Head
                        local screenPoint, onScreen = Camera:WorldToViewportPoint(targetHead.Position)
                        
                        if onScreen then
                            local centerX = Camera.ViewportSize.X / 2
                            local centerY = Camera.ViewportSize.Y / 2
                            local distance = (Vector2.new(screenPoint.X, screenPoint.Y) - Vector2.new(centerX, centerY)).Magnitude
                            if distance < shortestDistance then
                                shortestDistance = distance
                                closestPlayer = p
                            end
                        end
                    end
                end
                
                return closestPlayer
            end

            getgenv().aimbotHeartbeatConnection = RunService.Heartbeat:Connect(function()
                if not aimbotEnabled or not getgenv().aimbotActive then return end
                local target = findClosestEnemy()
                if target and target.Character and target.Character:FindFirstChild("Head") then
                    Camera.CFrame = CFrame.lookAt(Camera.CFrame.Position, target.Character.Head.Position)
                end
            end)

            getgenv().aimbotToggleConnection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
                if gameProcessed then return end
                if input.KeyCode == Enum.KeyCode.Q then
                    aimbotEnabled = not aimbotEnabled
                    showNotification("Aimbot " .. (aimbotEnabled and "ON" or "OFF"), "info")
                end
            end)

            showNotification("Aimbot system activated! Press Q to toggle.", "success")
        end
    },
    {
        name = "fullbright",
        category = "visuals",
        premium = false,
        description = "Make the game fully bright",
        func = function()
            Lighting.Brightness = 2
            Lighting.GlobalShadows = false
            Lighting.Ambient = Color3.fromRGB(180, 180, 180)
            Lighting.OutdoorAmbient = Color3.fromRGB(180, 180, 180)
            Lighting.FogEnd = 9e9
            for _, v in pairs(Lighting:GetChildren()) do
                if v:IsA("PostEffect") then v.Enabled = false end
            end
            showNotification("Fullbright enabled!", "success")
        end
    },
    {
        name = "remove_fog",
        category = "visuals",
        premium = false,
        description = "Remove fog from the game",
        func = function()
            Lighting.FogEnd = 1000000
            Lighting.FogStart = 1000000
            showNotification("Fog removed!", "success")
        end
    }
}


--// Themed Elements Registry
local ThemedElements = {}

--// Utility Functions with Executor Compatibility
-- FIX: Create a custom Color3 to Hex function as there is no built-in one.
local function Color3ToHex(color3)
    local r = math.floor(color3.R * 255)
    local g = math.floor(color3.G * 255)
    local b = math.floor(color3.B * 255)
    return string.format("%02X%02X%02X", r, g, b)
end

local function createSound(id, volume)
    if not SoundService then
        return {Play = function() end, Stop = function() end}
    end
    
    local sound = Instance.new("Sound")
    if type(id) == "number" then
        sound.SoundId = "rbxassetid://" .. id
    else
        sound.SoundId = id
    end
    sound.Volume = volume or 0.5
    sound.Parent = SoundService or workspace
    return sound
end

local function safeWait(time)
    if task and task.wait then
        return task.wait(time)
    else
        local start = tick()
        repeat until tick() - start >= (time or 0.03)
        return tick() - start
    end
end

local function safeTween(object, info, props)
    local success, tween = pcall(function()
        return TweenService:Create(object, info, props)
    end)
    
    if success and tween then
        pcall(function() tween:Play() end)
        return tween
    else
        spawn(function()
            for property, value in pairs(props) do
                pcall(function()
                    object[property] = value
                end)
            end
        end)
    end
end

local function createParticle(parent, color)
    local particle = Instance.new("Frame")
    particle.Size = UDim2.new(0, math.random(2, 6), 0, math.random(2, 6))
    particle.Position = UDim2.new(math.random(), 0, math.random(), 0)
    particle.BackgroundColor3 = color or Color3.fromRGB(255, 255, 255)
    particle.BackgroundTransparency = math.random(30, 70) / 100
    particle.BorderSizePixel = 0
    particle.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(1, 0)
    corner.Parent = particle
    
    local tween = TweenService:Create(particle, TweenInfo.new(
        math.random(2, 5),
        Enum.EasingStyle.Linear,
        Enum.EasingDirection.InOut,
        -1,
        true
    ), {
        Position = UDim2.new(math.random(), 0, math.random(), 0),
        BackgroundTransparency = 1
    })
 
    tween:Play()
    
    return particle
end

local function showNotification(message, type)
    local notification = {
        Message = message,
        Type = type or "info",
        Time = tick()
    }
    table.insert(HubState.Notifications, notification)
    
    if #HubState.Notifications > 5 then
        table.remove(HubState.Notifications, 1)
    end
end

function applyTheme(themeName)
    HubState.CurrentTheme = themeName
    local theme = Themes[themeName]
    if not theme then return end
    
    pcall(function()
        if Lighting:FindFirstChild("Blur") then
            Lighting.Blur.Size = theme.Blur and 24 or 0
        end
    end)
    
    if theme.Particles then
        for _, particle in pairs(HubState.Particles) do
            if particle.Parent then
                particle.BackgroundColor3 = theme.Accent
            end
        end
    end
    
    for _, element in ipairs(ThemedElements) do
        if element.Element and element.Element.Parent then
            local props = {}
            if element.Properties.BackgroundColor3 then
                props.BackgroundColor3 = theme[element.Properties.BackgroundColor3]
            end
            if element.Properties.BackgroundTransparency then
                props.BackgroundTransparency = theme[element.Properties.BackgroundTransparency]
            end
            if element.Properties.TextColor3 then
                props.TextColor3 = theme[element.Properties.TextColor3]
            end
            if element.Properties.BorderColor3 then
                props.BorderColor3 = theme[element.Properties.BorderColor3]
            end
            
            if next(props) then
                safeTween(element.Element, TweenInfo.new(0.3, Enum.EasingStyle.Quad), props)
            end
        end
    end
    
    showNotification("Theme changed to " .. themeName, "success")
end

function applyLanguage(langCode)
    HubState.CurrentLanguage = langCode
    local lang = Languages[langCode] or Languages.en
    
    for _, element in ipairs(ThemedElements) do
        if element.Element and element.Element.Parent and element.Properties.TextKey then
             local text = lang[element.Properties.TextKey]
            if text then
                pcall(function() element.Element.Text = text end)
            end
        end
    end
    
    showNotification("Language changed to " .. (langCode), "success")
end

function toggleAdvancedESP()
    HubState.ESPEnabled = not HubState.ESPEnabled
    local espEnabled = HubState.ESPEnabled

    if espEnabled then
        local ESPFolder = Instance.new("Folder")
        ESPFolder.Name = "ESP_Objects"
        ESPFolder.Parent = workspace

        local function createESP(plr)
            if plr == player then return end
            
            local function addESPToCharacter(char)
                if not char or not ESPFolder.Parent or ESPFolder:FindFirstChild("ESP_" .. plr.Name) then return end
                
                local humanoidRootPart = char:WaitForChild("HumanoidRootPart", 5)
                if not humanoidRootPart then return end

                local head = char:WaitForChild("Head", 5)
                if not head then return end
                
                local espSize = char:GetExtentsSize() + Vector3.new(0,0.5,0)
                if espSize.X == 0 or espSize.Y == 0 or espSize.Z == 0 then
                    espSize = Vector3.new(4, 6, 2)
                end

                local ESPBox = Instance.new("BoxHandleAdornment")
                ESPBox.Name = "ESP_" .. plr.Name
                ESPBox.Parent = ESPFolder
                ESPBox.Size = espSize
                ESPBox.Adornee = humanoidRootPart
                ESPBox.AlwaysOnTop = true
                ESPBox.ZIndex = 10
                ESPBox.Transparency = 0.7
                ESPBox.Color3 = plr.Team and plr.Team.TeamColor.Color or Color3.fromRGB(255, 0, 0)
                
                local Billboard = Instance.new("BillboardGui")
                Billboard.Name = "ESP_Billboard_" .. plr.Name
                Billboard.Parent = ESPFolder
                Billboard.Adornee = head
                Billboard.Size = UDim2.new(0, 200, 0, 50)
                Billboard.StudsOffset = Vector3.new(0, 3, 0)
                Billboard.AlwaysOnTop = true
                
                local NameLabel = Instance.new("TextLabel")
                NameLabel.Parent = Billboard
                NameLabel.BackgroundTransparency = 1
                NameLabel.Size = UDim2.new(1, 0, 0.5, 0)
                NameLabel.Font = Enum.Font.GothamBold
                NameLabel.Text = plr.DisplayName
                NameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                NameLabel.TextScaled = true
                NameLabel.TextStrokeTransparency = 0
                NameLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
                       
                local DistanceLabel = Instance.new("TextLabel")
                DistanceLabel.Parent = Billboard
                DistanceLabel.Name = "DistanceLabel"
                DistanceLabel.BackgroundTransparency = 1
                DistanceLabel.Size = UDim2.new(1, 0, 0.5, 0)
                DistanceLabel.Position = UDim2.new(0, 0, 0.5, 0)
                DistanceLabel.Font = Enum.Font.Gotham
                DistanceLabel.Text = "0 studs"
                DistanceLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
                DistanceLabel.TextScaled = true
                DistanceLabel.TextStrokeTransparency = 0
                DistanceLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
                
                local humanoid = char:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    local HealthBar = Instance.new("Frame")
                    HealthBar.Parent = Billboard
                    HealthBar.Size = UDim2.new(0.8, 0, 0.1, 0)
                    HealthBar.Position = UDim2.new(0.1, 0, 1, 5)
                    HealthBar.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
                    HealthBar.BorderSizePixel = 0
                    
                    local HealthFill = Instance.new("Frame")
                    HealthFill.Parent = HealthBar
                    HealthFill.Size = UDim2.new(humanoid.Health / humanoid.MaxHealth, 0, 1, 0)
                    HealthFill.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
                    HealthFill.BorderSizePixel = 0
                    
                    humanoid.HealthChanged:Connect(function()
                        HealthFill.Size = UDim2.new(humanoid.Health / humanoid.MaxHealth, 0, 1, 0)
                        local healthRatio = humanoid.Health / humanoid.MaxHealth
                        if healthRatio > 0.5 then
                            HealthFill.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
                        elseif healthRatio > 0.25 then
                            HealthFill.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
                        else
                            HealthFill.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
                        end
                    end)
                end
            end
            
            if plr.Character then addESPToCharacter(plr.Character) end
            plr.CharacterAdded:Connect(addESPToCharacter)
            plr.CharacterAppearanceLoaded:Connect(addESPToCharacter)
        end
        
        for _, plr in ipairs(Players:GetPlayers()) do createESP(plr) end
        
        local playerAddedConnection = Players.PlayerAdded:Connect(createESP)
        table.insert(HubState.Connections, playerAddedConnection)

        local playerRemovingConnection = Players.PlayerRemoving:Connect(function(plr)
            if not workspace:FindFirstChild("ESP_Objects") then return end
            for _, obj in ipairs(workspace.ESP_Objects:GetChildren()) do
                if obj.Name:find(plr.Name) then
                    obj:Destroy()
                end
            end
        end)
        table.insert(HubState.Connections, playerRemovingConnection)

        local espUpdateConnection = RunService.Heartbeat:Connect(function()
            if not HubState.ESPEnabled or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
            local localHRP = player.Character.HumanoidRootPart
            if not workspace:FindFirstChild("ESP_Objects") then return end

            for _, obj in ipairs(workspace.ESP_Objects:GetChildren()) do
                if obj:IsA("BillboardGui") and obj.Adornee and obj.Adornee.Parent and obj.Adornee.Parent:FindFirstChild("HumanoidRootPart") then
                    local distanceLabel = obj:FindFirstChild("DistanceLabel")
                    if distanceLabel then
                        local targetHRP = obj.Adornee.Parent.HumanoidRootPart
                        local distance = math.floor((localHRP.Position - targetHRP.Position).Magnitude)
                        distanceLabel.Text = distance .. " studs"
                    end
                end
            end
        end)
        table.insert(HubState.Connections, espUpdateConnection)

        showNotification("Advanced ESP enabled with health bars and distance!", "success")
    else
        local ESPFolder = workspace:FindFirstChild("ESP_Objects")
        if ESPFolder then ESPFolder:Destroy() end
        -- Disconnect connections to prevent memory leaks
        for i, conn in ipairs(HubState.Connections) do
            if conn and conn.Connected then
                conn:Disconnect()
            end
            HubState.Connections[i] = nil
        end
    
        showNotification("ESP disabled", "info")
    end
end

--// Performance Monitor
spawn(function()
    while wait(1) do
        local deltaTime = safeWait()
        HubState.Performance.FPS = deltaTime > 0 and math.floor(1 / deltaTime) or 60
		pcall(function()
			HubState.Performance.Ping = math.floor(game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue())
			HubState.Performance.Memory = math.floor(game:GetService("Stats"):GetTotalMemoryUsageMb())
		end)
    end
end)

--// ====================================[   V2.3 UI CREATION   ]==================================== //--

function createMainUI()
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "AI_RevolutionHub"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainContainer"
    MainFrame.Size = UDim2.new(0, 850, 0, 550)
    MainFrame.Position = UDim2.new(0.5, -425, 1.2, -275)
    MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    MainFrame.BorderSizePixel = 0
    MainFrame.ClipsDescendants = true
    MainFrame.Parent = ScreenGui
    
    table.insert(ThemedElements, {
        Element = MainFrame,
        Properties = {BackgroundColor3 = "Background", BackgroundTransparency = "BackgroundTransparency"}
    })
    
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 16)
    Corner.Parent = MainFrame
    
    local Stroke = Instance.new("UIStroke")
    Stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    Stroke.Color = Color3.fromRGB(120, 110, 255)
    Stroke.Transparency = 0.5
    Stroke.Thickness = 2
    Stroke.Parent = MainFrame
    
    local ParticleContainer = Instance.new("Frame")
    ParticleContainer.Name = "Particles"
    ParticleContainer.Size = UDim2.new(1, 0, 1, 0)
    ParticleContainer.BackgroundTransparency = 1
    ParticleContainer.Parent = MainFrame
    
    spawn(function()
        while wait(0.4) do
            if #ParticleContainer:GetChildren() < 25 and HubState.Visible then
                local particle = createParticle(ParticleContainer, Themes[HubState.CurrentTheme].Accent)
                table.insert(HubState.Particles, particle)
            end
        end
    end)
    
    local TopNavBar = Instance.new("Frame")
    TopNavBar.Name = "TopNavBar"
    TopNavBar.Size = UDim2.new(1, 0, 0, 50)
    TopNavBar.BackgroundTransparency = 1
    TopNavBar.Parent = MainFrame
    
    table.insert(ThemedElements, {
        Element = TopNavBar,
        Properties = {BackgroundColor3 = "Primary", BackgroundTransparency = "PrimaryTransparency"}
    })
    
    TopNavBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            HubState.Draggable = true
            HubState.DragStart = input.Position
            HubState.StartPos = MainFrame.Position
        end
    end)
    
    TopNavBar.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            HubState.Draggable = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if HubState.Draggable and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - HubState.DragStart
            MainFrame.Position = UDim2.new(
                HubState.StartPos.X.Scale, HubState.StartPos.X.Offset + delta.X,
                HubState.StartPos.Y.Scale, HubState.StartPos.Y.Offset + delta.Y
            )
        end
    end)
    
    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Size = UDim2.new(0, 260, 1, 0) -- FIX: Set fixed width
    Title.Position = UDim2.new(0, 20, 0, 0)
    Title.BackgroundTransparency = 1
    Title.Text = Languages[HubState.CurrentLanguage].hub_title
    Title.Font = Enum.Font.GothamBold
    Title.TextSize = 20 -- FIX: Reduced text size
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextXAlignment = Enum.TextXAlignment.Left
    Title.Parent = TopNavBar
    
    table.insert(ThemedElements, {
        Element = Title,
        Properties = {TextColor3 = "Text", TextKey = "hub_title"}
    })
    
    local CloseButton = Instance.new("TextButton")
    CloseButton.Size = UDim2.new(0, 32, 0, 32)
    CloseButton.Position = UDim2.new(1, -20, 0.5, 0)
    CloseButton.AnchorPoint = Vector2.new(0.5, 0.5)
    CloseButton.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
    CloseButton.BackgroundTransparency = 0.2
    CloseButton.BorderSizePixel = 0
    CloseButton.Text = "√ó"
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.TextSize = 20
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.Parent = TopNavBar
    Instance.new("UICorner", CloseButton).CornerRadius = UDim.new(1, 0)
    
    CloseButton.MouseEnter:Connect(function() safeTween(CloseButton, TweenInfo.new(0.2), {BackgroundTransparency=0}) end)
    CloseButton.MouseLeave:Connect(function() safeTween(CloseButton, TweenInfo.new(0.2), {BackgroundTransparency=0.2}) end)

    local ContentArea = Instance.new("Frame")
    ContentArea.Name = "ContentArea"
    ContentArea.Size = UDim2.new(1, 0, 1, -50)
    ContentArea.Position = UDim2.new(0, 0, 0, 50)
    ContentArea.BackgroundTransparency = 1
    ContentArea.Parent = MainFrame
    
    local ContentPadding = Instance.new("UIPadding")
    ContentPadding.PaddingTop = UDim.new(0, 20)
    ContentPadding.PaddingLeft = UDim.new(0, 20)
    ContentPadding.PaddingRight = UDim.new(0, 20)
    ContentPadding.PaddingBottom = UDim.new(0, 20)
    ContentPadding.Parent = ContentArea
    
    local Tabs = {}
    local TabButtons = {}
    
    -- FIX: Position the button container in the center, leaving room for the title and close button
    local NavButtonContainer = Instance.new("Frame")
    NavButtonContainer.Size = UDim2.new(1, -320, 1, 0)
    NavButtonContainer.Position = UDim2.new(0.5, 0, 0.5, 0)
    NavButtonContainer.AnchorPoint = Vector2.new(0.5, 0.5)
    NavButtonContainer.BackgroundTransparency = 1
    NavButtonContainer.Parent = TopNavBar
    
    local TopNavList = Instance.new("UIListLayout")
    TopNavList.FillDirection = Enum.FillDirection.Horizontal
    TopNavList.VerticalAlignment = Enum.VerticalAlignment.Center
    TopNavList.HorizontalAlignment = Enum.HorizontalAlignment.Center
    TopNavList.SortOrder = Enum.SortOrder.LayoutOrder
    TopNavList.Padding = UDim.new(0, 10)
    TopNavList.Parent = NavButtonContainer
    
    local function createTopNavButton(name, icon, order, langKey)
        local TabButton = Instance.new("TextButton")
        TabButton.Name = name .. "Button"
        TabButton.Size = UDim2.new(0, 130, 0, 35)
        TabButton.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
        TabButton.BackgroundTransparency = 1
        TabButton.BorderSizePixel = 0
        TabButton.LayoutOrder = order
        TabButton.Font = Enum.Font.GothamSemibold
        TabButton.TextSize = 16
        TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        TabButton.Text = icon .. " " .. Languages[HubState.CurrentLanguage][langKey]
        TabButton.Parent = NavButtonContainer
        
        local Indicator = Instance.new("Frame")
        Indicator.Size = UDim2.new(1, 0, 0, 3)
        Indicator.Position = UDim2.new(0, 0, 1, 5)
        Indicator.BackgroundColor3 = Themes[HubState.CurrentTheme].Accent
        Indicator.BackgroundTransparency = 1
        Indicator.BorderSizePixel = 0
        Indicator.Parent = TabButton
        Instance.new("UICorner", Indicator).CornerRadius = UDim.new(1,0)
        
        table.insert(ThemedElements, {
            Element = TabButton,
            Properties = {TextColor3 = "TextSecondary"}
        })
        
        local TabContent = Instance.new("ScrollingFrame")
        TabContent.Name = name .. "Content"
        TabContent.Size = UDim2.new(1, 0, 1, 0)
        TabContent.BackgroundTransparency = 1
        TabContent.BorderSizePixel = 0
        TabContent.ScrollBarThickness = 6
        TabContent.ScrollBarImageColor3 = Themes[HubState.CurrentTheme].Accent
        TabContent.ScrollBarImageTransparency = 0.3
        TabContent.CanvasSize = UDim2.new(0, 0, 0, 0)
        TabContent.AutomaticCanvasSize = Enum.AutomaticSize.Y
        TabContent.Visible = false
        TabContent.Parent = ContentArea
        
        local ContentList = Instance.new("UIListLayout")
        ContentList.SortOrder = Enum.SortOrder.LayoutOrder
        ContentList.Padding = UDim.new(0, 15)
        ContentList.Parent = TabContent
        
        Tabs[name] = TabContent
        TabButtons[name] = {Button = TabButton, Indicator = Indicator}
        
        TabButton.MouseEnter:Connect(function()
            if HubState.CurrentTab ~= name then
                safeTween(TabButton, TweenInfo.new(0.2), { TextColor3 = Themes[HubState.CurrentTheme].Text })
            end
        end)
        
        TabButton.MouseLeave:Connect(function()
            if HubState.CurrentTab ~= name then
                safeTween(TabButton, TweenInfo.new(0.2), { TextColor3 = Themes[HubState.CurrentTheme].TextSecondary })
            end
        end)
        
        TabButton.MouseButton1Click:Connect(function()
            switchTab(name)
        end)
        
        return TabContent
    end
    
    local DashboardTab = createTopNavButton("Dashboard", "üìä", 1, "dashboard_tab")
    local ScriptsTab = createTopNavButton("Scripts", "‚ö°", 2, "scripts_tab")
    local AIAssistantTab = createTopNavButton("AIAssistant", "üß†", 3, "ai_assistant_tab")
    local SettingsTab = createTopNavButton("Settings", "‚öôÔ∏è", 4, "settings_tab")
    local InfoTab = createTopNavButton("Info", "‚ÑπÔ∏è", 5, "info_tab")
    
    function switchTab(tabName)
        if HubState.CurrentTab == tabName then return end
        
        for name, tab in pairs(Tabs) do
            tab.Visible = false
            safeTween(TabButtons[name].Button, TweenInfo.new(0.3), { TextColor3 = Themes[HubState.CurrentTheme].TextSecondary })
            safeTween(TabButtons[name].Indicator, TweenInfo.new(0.3), { BackgroundTransparency = 1, Size = UDim2.new(0,0,0,3)})
        end
        
        if Tabs[tabName] then
            Tabs[tabName].Visible = true
            safeTween(TabButtons[tabName].Button, TweenInfo.new(0.3), { TextColor3 = Themes[HubState.CurrentTheme].Accent })
            safeTween(TabButtons[tabName].Indicator, TweenInfo.new(0.3), { BackgroundTransparency = 0, Size = UDim2.new(1,0,0,3)})
        end
        
        HubState.CurrentTab = tabName
        pcall(function() createSound(421058925, 0.3):Play() end)
    end
    
    local function createDashboardContent()
        local WelcomeSection = Instance.new("Frame")
        WelcomeSection.Size = UDim2.new(1, 0, 0, 120)
        WelcomeSection.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
        WelcomeSection.BackgroundTransparency = 0.2
        WelcomeSection.BorderSizePixel = 0
        WelcomeSection.Parent = DashboardTab
        
        table.insert(ThemedElements, {
            Element = WelcomeSection,
            Properties = {BackgroundColor3 = "Primary", BackgroundTransparency = "PrimaryTransparency"}
        })
        
        local WelcomeCorner = Instance.new("UICorner")
        WelcomeCorner.CornerRadius = UDim.new(0, 12)
        WelcomeCorner.Parent = WelcomeSection
             
        local WelcomePadding = Instance.new("UIPadding")
        WelcomePadding.PaddingTop = UDim.new(0, 20)
        WelcomePadding.PaddingLeft = UDim.new(0, 25)
        WelcomePadding.PaddingRight = UDim.new(0, 25)
        WelcomePadding.PaddingBottom = UDim.new(0, 20)
        WelcomePadding.Parent = WelcomeSection
        
        local WelcomeTitle = Instance.new("TextLabel")
        WelcomeTitle.Size = UDim2.new(1, 0, 0, 35)
        WelcomeTitle.BackgroundTransparency = 1
        WelcomeTitle.Text = Languages[HubState.CurrentLanguage].dashboard_welcome .. player.DisplayName
        WelcomeTitle.Font = Enum.Font.GothamBold
        WelcomeTitle.TextSize = 28
        WelcomeTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        WelcomeTitle.TextXAlignment = Enum.TextXAlignment.Left
        WelcomeTitle.Parent = WelcomeSection
        
        table.insert(ThemedElements, { Element = WelcomeTitle, Properties = {TextColor3 = "Text"} })
        
        local WelcomeSubtitle = Instance.new("TextLabel")
        WelcomeSubtitle.Size = UDim2.new(1, 0, 0, 25)
        WelcomeSubtitle.Position = UDim2.new(0, 0, 0, 40)
        WelcomeSubtitle.BackgroundTransparency = 1
        WelcomeSubtitle.Text = Languages[HubState.CurrentLanguage].dashboard_subtitle
        WelcomeSubtitle.Font = Enum.Font.Gotham
        WelcomeSubtitle.TextSize = 16
        WelcomeSubtitle.TextColor3 = Color3.fromRGB(200, 200, 220)
        WelcomeSubtitle.TextXAlignment = Enum.TextXAlignment.Left
        WelcomeSubtitle.Parent = WelcomeSection
        
        table.insert(ThemedElements, {
            Element = WelcomeSubtitle,
            Properties = {TextColor3 = "TextSecondary", TextKey = "dashboard_subtitle"}
        })

        local ClockLabel = Instance.new("TextLabel")
        ClockLabel.Size = UDim2.new(0.5, 0, 0, 25)
        ClockLabel.Position = UDim2.new(1, -25, 0, 20)
        ClockLabel.AnchorPoint = Vector2.new(1,0)
        ClockLabel.BackgroundTransparency = 1
        ClockLabel.Font = Enum.Font.GothamBold
        ClockLabel.TextSize = 22
        ClockLabel.TextXAlignment = Enum.TextXAlignment.Right
        ClockLabel.Parent = WelcomeSection
        table.insert(ThemedElements, {Element = ClockLabel, Properties = {TextColor3 = "Accent"}})

        spawn(function()
            while wait(1) do
                if ClockLabel.Parent then ClockLabel.Text = os.date("%I:%M %p") end
            end
        end)
        
        local StatsSection = Instance.new("Frame")
        StatsSection.Size = UDim2.new(1, 0, 0, 100)
        StatsSection.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
        StatsSection.BackgroundTransparency = 0.2
        StatsSection.BorderSizePixel = 0
        StatsSection.LayoutOrder = 1
        StatsSection.Parent = DashboardTab
        
        table.insert(ThemedElements, {
            Element = StatsSection,
            Properties = {BackgroundColor3 = "Primary", BackgroundTransparency = "PrimaryTransparency"}
        })
        
        Instance.new("UICorner", StatsSection).CornerRadius = UDim.new(0, 12)
  
        local StatsTitle = Instance.new("TextLabel")
        StatsTitle.Size = UDim2.new(1, 0, 0, 30)
        StatsTitle.Position = UDim2.new(0, 20, 0, 10)
        StatsTitle.BackgroundTransparency = 1
        StatsTitle.Text = Languages[HubState.CurrentLanguage].performance_title or "System Performance"
        StatsTitle.Font = Enum.Font.GothamBold
        StatsTitle.TextSize = 20
        StatsTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        StatsTitle.TextXAlignment = Enum.TextXAlignment.Left
        StatsTitle.Parent = StatsSection
        
        table.insert(ThemedElements, {
            Element = StatsTitle,
            Properties = {TextColor3 = "Text", TextKey = "performance_title"}
        })
        
        local FPSLabel = Instance.new("TextLabel")
        FPSLabel.Size = UDim2.new(0.3, 0, 0, 25)
        FPSLabel.Position = UDim2.new(0, 20, 0, 50)
        FPSLabel.BackgroundTransparency = 1
        FPSLabel.Text = "FPS: " .. HubState.Performance.FPS
        FPSLabel.Font = Enum.Font.GothamSemibold
        FPSLabel.TextSize = 16
        FPSLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
        FPSLabel.TextXAlignment = Enum.TextXAlignment.Left
        FPSLabel.Parent = StatsSection
        
        local PingLabel = Instance.new("TextLabel")
        PingLabel.Size = UDim2.new(0.3, 0, 0, 25)
        PingLabel.Position = UDim2.new(0.35, 0, 0, 50)
        PingLabel.BackgroundTransparency = 1
        PingLabel.Text = "Ping: " .. HubState.Performance.Ping .. "ms"
        PingLabel.Font = Enum.Font.GothamSemibold
        PingLabel.TextSize = 16
        PingLabel.TextColor3 = Color3.fromRGB(255, 255, 100)
        PingLabel.TextXAlignment = Enum.TextXAlignment.Left
        PingLabel.Parent = StatsSection
        
        local MemoryLabel = Instance.new("TextLabel")
        MemoryLabel.Size = UDim2.new(0.3, 0, 0, 25)
        MemoryLabel.Position = UDim2.new(0.7, 0, 0, 50)
        MemoryLabel.BackgroundTransparency = 1
        MemoryLabel.Text = "Memory: " .. HubState.Performance.Memory .. "MB"
        MemoryLabel.Font = Enum.Font.GothamSemibold
        MemoryLabel.TextSize = 16
        MemoryLabel.TextColor3 = Color3.fromRGB(100, 200, 255)
        MemoryLabel.TextXAlignment = Enum.TextXAlignment.Left
        MemoryLabel.Parent = StatsSection
        
        spawn(function()
            while wait(1) do
                if FPSLabel.Parent then
                    FPSLabel.Text = (Languages[HubState.CurrentLanguage].fps_label or "FPS") .. ": " .. HubState.Performance.FPS
                    PingLabel.Text = (Languages[HubState.CurrentLanguage].ping_label or "Ping") .. ": " .. HubState.Performance.Ping .. "ms"
                    MemoryLabel.Text = (Languages[HubState.CurrentLanguage].memory_label or "Memory") .. ": " .. HubState.Performance.Memory .. "MB"
                end
            end
        end)
    end
    
    local function createScriptsContent()
        for _, script in ipairs(ScriptLibrary) do
            local ScriptFrame = Instance.new("Frame")
            ScriptFrame.Size = UDim2.new(1, 0, 0, 80)
            ScriptFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
            ScriptFrame.BackgroundTransparency = 0.2
            ScriptFrame.BorderSizePixel = 0
            ScriptFrame.Parent = ScriptsTab
            
            table.insert(ThemedElements, {
                Element = ScriptFrame,
                Properties = {BackgroundColor3 = "Primary", BackgroundTransparency = "PrimaryTransparency"}
            })
 
            local ScriptCorner = Instance.new("UICorner")
            ScriptCorner.CornerRadius = UDim.new(0, 10)
            ScriptCorner.Parent = ScriptFrame
            
            local ScriptTitle = Instance.new("TextLabel")
            ScriptTitle.Size = UDim2.new(0.6, 0, 0, 30)
            ScriptTitle.Position = UDim2.new(0, 15, 0, 10)
            ScriptTitle.BackgroundTransparency = 1
            ScriptTitle.Text = Languages[HubState.CurrentLanguage][script.name] or script.name
            ScriptTitle.Font = Enum.Font.GothamBold
            ScriptTitle.TextSize = 18
            ScriptTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            ScriptTitle.TextXAlignment = Enum.TextXAlignment.Left
            ScriptTitle.Parent = ScriptFrame
            
            table.insert(ThemedElements, {
                Element = ScriptTitle,
                Properties = {TextColor3 = "Text"}
            })
            
            local ScriptDesc = Instance.new("TextLabel")
            ScriptDesc.Size = UDim2.new(0.6, 0, 0, 25)
            ScriptDesc.Position = UDim2.new(0, 15, 0, 35)
            ScriptDesc.BackgroundTransparency = 1
            ScriptDesc.Text = script.description
            ScriptDesc.Font = Enum.Font.Gotham
            ScriptDesc.TextSize = 14
            ScriptDesc.TextColor3 = Color3.fromRGB(180, 180, 200)
            ScriptDesc.TextXAlignment = Enum.TextXAlignment.Left
            ScriptDesc.TextWrapped = true
            ScriptDesc.Parent = ScriptFrame
            
            table.insert(ThemedElements, {
                Element = ScriptDesc,
                Properties = {TextColor3 = "TextSecondary"}
            })
            
            local ExecuteButton = Instance.new("TextButton")
            ExecuteButton.Size = UDim2.new(0, 100, 0, 35)
            ExecuteButton.Position = UDim2.new(1, -120, 0.5, -17.5)
            ExecuteButton.BackgroundColor3 = Color3.fromRGB(120, 110, 255)
            ExecuteButton.BackgroundTransparency = 0.1
            ExecuteButton.BorderSizePixel = 0
            ExecuteButton.Text = "Execute"
            ExecuteButton.Font = Enum.Font.GothamBold
            ExecuteButton.TextSize = 16
            ExecuteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            ExecuteButton.Parent = ScriptFrame
            
            table.insert(ThemedElements, {
                Element = ExecuteButton,
                Properties = {BackgroundColor3 = "Accent", TextColor3 = "Text"}
            })
            
            Instance.new("UICorner", ExecuteButton).CornerRadius = UDim.new(0, 8)
            
            ExecuteButton.MouseEnter:Connect(function()
                safeTween(ExecuteButton, TweenInfo.new(0.2), { BackgroundTransparency = 0.05 })
            end)
            
            ExecuteButton.MouseLeave:Connect(function()
                safeTween(ExecuteButton, TweenInfo.new(0.2), { BackgroundTransparency = 0.1 })
            end)
            
            ExecuteButton.MouseButton1Click:Connect(function()
                if script.func then
                    script.func()
                    if #HubState.ScriptHistory == 0 or HubState.ScriptHistory[#HubState.ScriptHistory] ~= script.name then
                        table.insert(HubState.ScriptHistory, script.name)
                    end
                end
            end)
        end
    end
    
    local function createAIAssistantContent()
        local lang = Languages[HubState.CurrentLanguage]

        local ChatContainer = Instance.new("Frame")
        ChatContainer.Size = UDim2.new(1, 0, 1, -60)
        ChatContainer.BackgroundTransparency = 1
        ChatContainer.Parent = AIAssistantTab

        local ChatHistory = Instance.new("ScrollingFrame")
        ChatHistory.Size = UDim2.new(1, 0, 1, 0)
        ChatHistory.BackgroundTransparency = 1
        ChatHistory.BorderSizePixel = 0
        ChatHistory.ScrollBarThickness = 5
        ChatHistory.AutomaticCanvasSize = Enum.AutomaticSize.Y
        ChatHistory.Parent = ChatContainer
        
        local ChatList = Instance.new("UIListLayout")
        ChatList.Padding = UDim.new(0, 10)
        ChatList.Parent = ChatHistory

        local InputFrame = Instance.new("Frame")
        InputFrame.Size = UDim2.new(1, 0, 0, 50)
        InputFrame.Position = UDim2.new(0, 0, 1, -50)
        InputFrame.BackgroundTransparency = 1
        InputFrame.Parent = AIAssistantTab

        local InputBox = Instance.new("TextBox")
        InputBox.Size = UDim2.new(1, -70, 1, 0)
        InputBox.BackgroundColor3 = Color3.fromRGB(40,40,60)
        InputBox.BackgroundTransparency = 0.2
        InputBox.BorderSizePixel = 0
        InputBox.PlaceholderText = lang.ai_input_placeholder
        InputBox.Font = Enum.Font.Gotham
        InputBox.TextSize = 16
        InputBox.TextColor3 = Color3.fromRGB(255,255,255)
        InputBox.Parent = InputFrame
        Instance.new("UICorner", InputBox).CornerRadius = UDim.new(0, 8)
        local pad = Instance.new("UIPadding", InputBox); pad.PaddingLeft=UDim.new(0,15)
        
        table.insert(ThemedElements, {Element=InputBox, Properties={BackgroundColor3="Primary", TextColor3="Text"}})

        local SendButton = Instance.new("TextButton")
        SendButton.Size = UDim2.new(0, 60, 1, 0)
        SendButton.Position = UDim2.new(1, -60, 0, 0)
        SendButton.BackgroundColor3 = Color3.fromRGB(120,110,255)
        SendButton.Text = "‚û§"
        SendButton.Font = Enum.Font.GothamBold
        SendButton.TextSize = 24
        SendButton.TextColor3 = Color3.fromRGB(255,255,255)
        SendButton.Parent = InputFrame
        Instance.new("UICorner", SendButton).CornerRadius = UDim.new(0, 8)

        table.insert(ThemedElements, {Element=SendButton, Properties={BackgroundColor3="Accent", TextColor3="Text"}})

        local function addMessageToChat(sender, message, isCode)
            local MessageHolder = Instance.new("Frame")
            MessageHolder.BackgroundTransparency = 1
            MessageHolder.AutomaticSize = Enum.AutomaticSize.Y
            MessageHolder.Size = UDim2.new(1, 0, 0, 0)
            MessageHolder.Parent = ChatHistory
            
            local MessageFrame = Instance.new("TextLabel")
            MessageFrame.BackgroundTransparency = 1
            MessageFrame.Text = ""
            MessageFrame.Size = UDim2.new(1, 0, 0, 60)
            MessageFrame.Font = Enum.Font.Gotham
            MessageFrame.TextSize = 15
            MessageFrame.TextColor3 = Color3.fromRGB(230,230,255)
            MessageFrame.TextXAlignment = Enum.TextXAlignment.Left
            MessageFrame.TextYAlignment = Enum.TextYAlignment.Top
            MessageFrame.TextWrapped = true
            MessageFrame.AutomaticSize = Enum.AutomaticSize.Y
            MessageFrame.Parent = MessageHolder

            if isCode then
                MessageFrame.Font = Enum.Font.Code
                MessageFrame.BackgroundColor3 = Themes[HubState.CurrentTheme].Primary
                MessageFrame.BackgroundTransparency = 0.5
                local codePadding = Instance.new("UIPadding", MessageFrame)
                codePadding.PaddingLeft = UDim.new(0, 10)
                codePadding.PaddingRight = UDim.new(0, 10)
                codePadding.PaddingTop = UDim.new(0, 10)
                codePadding.PaddingBottom = UDim.new(0, 10)
                Instance.new("UICorner", MessageFrame).CornerRadius = UDim.new(0, 8)
                MessageFrame.Text = message
                
                local CopyButton = Instance.new("TextButton")
                CopyButton.Size = UDim2.new(0, 60, 0, 25)
                CopyButton.Position = UDim2.new(1, -65, 0, 5)
                CopyButton.BackgroundColor3 = Themes[HubState.CurrentTheme].Accent
                CopyButton.Text = "Copy"
                CopyButton.Font = Enum.Font.GothamBold
                CopyButton.TextSize = 12
                CopyButton.TextColor3 = Color3.fromRGB(255,255,255)
                CopyButton.Parent = MessageFrame
                Instance.new("UICorner", CopyButton).CornerRadius = UDim.new(0,6)
                
                CopyButton.MouseButton1Click:Connect(function()
                    if setclipboard then
                        setclipboard(message)
                        showNotification("Copied to clipboard!", "success")
                    else
                        showNotification("Your executor does not support setclipboard.", "error")
                    end
                end)
            else
                local prefix = sender == "AI" and "üß† AI: " or "üë§ You: "
                MessageFrame.RichText = true
                local colorHex = sender == "AI" and Color3ToHex(Themes[HubState.CurrentTheme].Accent) or "FFFFFF"
                MessageFrame.Text = string.format("<font color='#%s'><b>%s</b></font>%s", colorHex, prefix, message)
            end
        end
        
        local function simulateAIResponse(prompt)
            prompt = prompt:lower()
            local lang = Languages[HubState.CurrentLanguage]
            
            local function generateScript(type, value)
                addMessageToChat("AI", lang.ai_generating_script)
                safeWait(0.5)
                local scriptCode = "-- Generated by 0_0 Hub AI\n"
                if type == "speed" then
                    scriptCode = scriptCode .. "game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = " .. (value or 100)
                elseif type == "fly" then
                    scriptCode = scriptCode .. "loadstring(game:HttpGet('https://pastebin.com/raw/J8W2i1vE'))()" -- Example fly script
                elseif type == "noclip" then
                    scriptCode = scriptCode .. "loadstring(game:HttpGet('https://pastebin.com/raw/g1rMNEq4'))()" -- Example noclip script
                elseif type == "jumppower" then
                    scriptCode = scriptCode .. "game.Players.LocalPlayer.Character.Humanoid.JumpPower = " .. (value or 150)
                end
                addMessageToChat("AI", scriptCode, true)
            end

            if prompt:match("speed") then
                local val = prompt:match("%d+")
                generateScript("speed", val)
            elseif prompt:match("fly") then
                generateScript("fly")
            elseif prompt:match("noclip") or prompt:match("no clip") then
                generateScript("noclip")
            elseif prompt:match("jump") then
                 local val = prompt:match("%d+")
                generateScript("jumppower", val)
            elseif prompt:match("hello") or prompt:match("hi") then
                addMessageToChat("AI", "Hello there! How can I help you?")
            else
                addMessageToChat("AI", lang.ai_unknown_command)
            end
        end

        local function onSend()
            local text = InputBox.Text
            if text == "" then return end
            
            addMessageToChat("You", text)
            InputBox.Text = ""
            
            safeWait(0.5) -- Simulate thinking
            simulateAIResponse(text)

            safeWait(0.1)
            ChatHistory.CanvasPosition = Vector2.new(0, ChatList.AbsoluteContentSize.Y)
        end

        SendButton.MouseButton1Click:Connect(onSend)
        InputBox.FocusLost:Connect(function(enterPressed)
            if enterPressed then onSend() end
        end)

        addMessageToChat("AI", lang.ai_welcome_message)
    end
    
    local function createSettingsContent()
        local ThemeSection = Instance.new("Frame")
        ThemeSection.Size = UDim2.new(1, 0, 0, 200)
        ThemeSection.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
        ThemeSection.BackgroundTransparency = 0.2
        ThemeSection.BorderSizePixel = 0
        ThemeSection.Parent = SettingsTab
        
        table.insert(ThemedElements, {
            Element = ThemeSection,
            Properties = {BackgroundColor3 = "Primary", BackgroundTransparency = "PrimaryTransparency"}
        })
        
        local ThemeCorner = Instance.new("UICorner")
        ThemeCorner.CornerRadius = UDim.new(0, 12)
        ThemeCorner.Parent = ThemeSection
        
        local ThemeTitle = Instance.new("TextLabel")
        ThemeTitle.Size = UDim2.new(1, 0, 0, 30)
        ThemeTitle.Position = UDim2.new(0, 20, 0, 10)
        ThemeTitle.BackgroundTransparency = 1
        ThemeTitle.Text = Languages[HubState.CurrentLanguage].theme_label or "Visual Theme"
        ThemeTitle.Font = Enum.Font.GothamBold
        ThemeTitle.TextSize = 20
        ThemeTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        ThemeTitle.TextXAlignment = Enum.TextXAlignment.Left
        ThemeTitle.Parent = ThemeSection
        
        table.insert(ThemedElements, {
            Element = ThemeTitle,
            Properties = {TextColor3 = "Text", TextKey = "theme_label"}
        })
        
        local ThemeGrid = Instance.new("Frame")
        ThemeGrid.Size = UDim2.new(1, -40, 1, -50)
        ThemeGrid.Position = UDim2.new(0, 20, 0, 40)
        ThemeGrid.BackgroundTransparency = 1
        ThemeGrid.Parent = ThemeSection
        
        local ThemeLayout = Instance.new("UIGridLayout")
        ThemeLayout.CellSize = UDim2.new(0, 100, 0, 30)
        ThemeLayout.CellPadding = UDim2.new(0, 8, 0, 8)
        ThemeLayout.Parent = ThemeGrid
  
        local themeOrder = {"NeuralNet", "Glassmorphism", "CyberNeon", "Sunset", "Ocean", "Forest", "Pastel", "Monochrome", "Galaxy", "Fire", "Ice", "Retro", "Matrix"}
        for _, themeName in ipairs(themeOrder) do
            local themeData = Themes[themeName]
            local ThemeButton = Instance.new("TextButton")
            ThemeButton.BackgroundColor3 = themeData.Accent
            ThemeButton.BackgroundTransparency = 0.1
            ThemeButton.BorderSizePixel = 0
            ThemeButton.Text = themeName
            ThemeButton.Font = Enum.Font.GothamSemibold
            ThemeButton.TextSize = 12
            ThemeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            ThemeButton.Parent = ThemeGrid
            
            table.insert(ThemedElements, {
                Element = ThemeButton,
                Properties = {BackgroundColor3 = "Accent", TextColor3 = "Text"}
            })
            
            local ThemeButtonCorner = Instance.new("UICorner")
            ThemeButtonCorner.CornerRadius = UDim.new(0, 6)
            ThemeButtonCorner.Parent = ThemeButton
         
            ThemeButton.MouseButton1Click:Connect(function() applyTheme(themeName) end)
            
            ThemeButton.MouseEnter:Connect(function() safeTween(ThemeButton, TweenInfo.new(0.2), {BackgroundTransparency = 0}) end)
            ThemeButton.MouseLeave:Connect(function() safeTween(ThemeButton, TweenInfo.new(0.2), {BackgroundTransparency = 0.1}) end)
        end
        
        local LanguageSection = Instance.new("Frame")
        LanguageSection.Size = UDim2.new(1, 0, 0, 120)
        LanguageSection.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
        LanguageSection.BackgroundTransparency = 0.2
        LanguageSection.BorderSizePixel = 0
        LanguageSection.LayoutOrder = 1
        LanguageSection.Parent = SettingsTab
        
        table.insert(ThemedElements, {
            Element = LanguageSection,
            Properties = {BackgroundColor3 = "Primary", BackgroundTransparency = "PrimaryTransparency"}
        })
        
        local LanguageCorner = Instance.new("UICorner")
        LanguageCorner.CornerRadius = UDim.new(0, 12)
        LanguageCorner.Parent = LanguageSection
        
        local LanguageTitle = Instance.new("TextLabel")
        LanguageTitle.Size = UDim2.new(1, 0, 0, 30)
        LanguageTitle.Position = UDim2.new(0, 20, 0, 10)
        LanguageTitle.BackgroundTransparency = 1
        LanguageTitle.Text = Languages[HubState.CurrentLanguage].language_label or "Language"
        LanguageTitle.Font = Enum.Font.GothamBold
        LanguageTitle.TextSize = 20
        LanguageTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        LanguageTitle.TextXAlignment = Enum.TextXAlignment.Left
        LanguageTitle.Parent = LanguageSection
        
        table.insert(ThemedElements, {
            Element = LanguageTitle,
            Properties = {TextColor3 = "Text", TextKey = "language_label"}
        })
        
        local LanguageContainer = Instance.new("Frame")
        LanguageContainer.Size = UDim2.new(1, -40, 0, 60)
        LanguageContainer.Position = UDim2.new(0, 20, 0, 40)
        LanguageContainer.BackgroundTransparency = 1
        LanguageContainer.Parent = LanguageSection
        
        local LanguageLayout = Instance.new("UIListLayout")
        LanguageLayout.FillDirection = Enum.FillDirection.Horizontal
        LanguageLayout.Padding = UDim.new(0, 8)
        LanguageLayout.Parent = LanguageContainer
        
        local languageNames = {
            en = "English", es = "Espa√±ol", fr = "Fran√ßais", de = "Deutsch",
            pt = "Portugu√™s", ru = "–†—É—Å—Å–∫–∏–π", ja = "Êó•Êú¨Ë™û", ko = "ÌïúÍµ≠Ïñ¥"
        }
        
        for langCode, langName in pairs(languageNames) do
            local LangButton = Instance.new("TextButton")
            LangButton.Size = UDim2.new(0, 80, 0, 30)
            LangButton.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
            LangButton.BackgroundTransparency = 0.2
            LangButton.BorderSizePixel = 0
            LangButton.Text = langName
            LangButton.Font = Enum.Font.GothamSemibold
            LangButton.TextSize = 12
            LangButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            LangButton.Parent = LanguageContainer
            
            table.insert(ThemedElements, {
                Element = LangButton,
                Properties = {BackgroundColor3 = "Primary", TextColor3 = "Text"}
            })
            
            local LangCorner = Instance.new("UICorner")
            LangCorner.CornerRadius = UDim.new(0, 6)
            LangCorner.Parent = LangButton
            
            LangButton.MouseButton1Click:Connect(function() applyLanguage(langCode) end)
        end

        local AdvancedSection = Instance.new("Frame")
        AdvancedSection.Size = UDim2.new(1, 0, 0, 200)
        AdvancedSection.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
        AdvancedSection.BackgroundTransparency = 0.2
        AdvancedSection.BorderSizePixel = 0
        AdvancedSection.LayoutOrder = 2
        AdvancedSection.Parent = SettingsTab
        
        table.insert(ThemedElements, {
            Element = AdvancedSection,
            Properties = {BackgroundColor3 = "Primary", BackgroundTransparency = "PrimaryTransparency"}
        })
        
        local AdvancedCorner = Instance.new("UICorner")
        AdvancedCorner.CornerRadius = UDim.new(0, 12)
        AdvancedCorner.Parent = AdvancedSection
        
        local AdvancedTitle = Instance.new("TextLabel")
        AdvancedTitle.Size = UDim2.new(1, 0, 0, 30)
        AdvancedTitle.Position = UDim2.new(0, 20, 0, 10)
        AdvancedTitle.BackgroundTransparency = 1
        AdvancedTitle.Text = "Hotkey Settings"
        AdvancedTitle.Font = Enum.Font.GothamBold
        AdvancedTitle.TextSize = 20
        AdvancedTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        AdvancedTitle.TextXAlignment = Enum.TextXAlignment.Left
        AdvancedTitle.Parent = AdvancedSection
        
        table.insert(ThemedElements, {
            Element = AdvancedTitle,
            Properties = {TextColor3 = "Text", TextKey = "hotkeys_title"}
        })
        
        local HotkeyContainer = Instance.new("Frame")
        HotkeyContainer.Size = UDim2.new(1, -40, 1, -50)
        HotkeyContainer.Position = UDim2.new(0, 20, 0, 40)
        HotkeyContainer.BackgroundTransparency = 1
        HotkeyContainer.Parent = AdvancedSection
        
        local HotkeyLayout = Instance.new("UIListLayout")
        HotkeyLayout.Padding = UDim.new(0, 10)
        HotkeyLayout.Parent = HotkeyContainer
        
        local function createHotkeySetting(name, defaultKey, langKey)
            local HotkeyFrame = Instance.new("Frame")
            HotkeyFrame.Size = UDim2.new(1, 0, 0, 30)
            HotkeyFrame.BackgroundTransparency = 1
            HotkeyFrame.Parent = HotkeyContainer
            
            local HotkeyLabel = Instance.new("TextLabel")
            HotkeyLabel.Size = UDim2.new(0.6, 0, 1, 0)
            HotkeyLabel.BackgroundTransparency = 1
            HotkeyLabel.Text = Languages[HubState.CurrentLanguage][langKey] or name
            HotkeyLabel.Font = Enum.Font.Gotham
            HotkeyLabel.TextSize = 16
            HotkeyLabel.TextColor3 = Color3.fromRGB(200, 200, 220)
            HotkeyLabel.TextXAlignment = Enum.TextXAlignment.Left
            HotkeyLabel.Parent = HotkeyFrame
            
            table.insert(ThemedElements, {
                Element = HotkeyLabel,
                Properties = {TextColor3 = "TextSecondary", TextKey = langKey}
            })
            
            local HotkeyButton = Instance.new("TextButton")
            HotkeyButton.Size = UDim2.new(0, 100, 0, 25)
            HotkeyButton.Position = UDim2.new(1, -100, 0.5, -12.5)
            HotkeyButton.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
            HotkeyButton.BackgroundTransparency = 0.2
            HotkeyButton.BorderSizePixel = 0
            HotkeyButton.Text = defaultKey
            HotkeyButton.Font = Enum.Font.GothamSemibold
            HotkeyButton.TextSize = 14
            HotkeyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            HotkeyButton.Parent = HotkeyFrame
            
            table.insert(ThemedElements, {
                Element = HotkeyButton,
                Properties = {BackgroundColor3 = "Primary", TextColor3 = "Text"}
            })
            
            local HotkeyCorner = Instance.new("UICorner")
            HotkeyCorner.CornerRadius = UDim.new(0, 4)
            HotkeyCorner.Parent = HotkeyButton
        end
        
        createHotkeySetting("Toggle Hub", "RightControl", "toggle_hub_key")
        createHotkeySetting("Emergency Hide", "F1", "emergency_hide")
        createHotkeySetting("Quick Execute", "F2", "quick_execute")
    end
    
    local function createInfoContent()
        local InfoContainer = Instance.new("Frame")
        InfoContainer.Size = UDim2.new(1, 0, 1, 0)
        InfoContainer.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
        InfoContainer.BackgroundTransparency = 0.2
        InfoContainer.BorderSizePixel = 0
        InfoContainer.Parent = InfoTab
        
        table.insert(ThemedElements, {
            Element = InfoContainer,
            Properties = {BackgroundColor3 = "Primary", BackgroundTransparency = "PrimaryTransparency"}
        })
        
        local InfoCorner = Instance.new("UICorner")
        InfoCorner.CornerRadius = UDim.new(0, 12)
        InfoCorner.Parent = InfoContainer
        
        local InfoPadding = Instance.new("UIPadding")
        InfoPadding.PaddingTop = UDim.new(0, 30)
        InfoPadding.PaddingLeft = UDim.new(0, 30)
        InfoPadding.PaddingRight = UDim.new(0, 30)
        InfoPadding.PaddingBottom = UDim.new(0, 30)
        InfoPadding.Parent = InfoContainer
             
        local InfoTitle = Instance.new("TextLabel")
        InfoTitle.Size = UDim2.new(1, 0, 0, 40)
        InfoTitle.BackgroundTransparency = 1
        InfoTitle.Text = "üöÄ 0_0 Hub AI Revolution"
        InfoTitle.Font = Enum.Font.GothamBold
        InfoTitle.TextSize = 28
        InfoTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        InfoTitle.TextXAlignment = Enum.TextXAlignment.Center
        InfoTitle.Parent = InfoContainer
        
        table.insert(ThemedElements, { Element = InfoTitle, Properties = {TextColor3 = "Text"} })
        
        local InfoDescription = Instance.new("TextLabel")
        InfoDescription.Size = UDim2.new(1, 0, 1, -50)
        InfoDescription.Position = UDim2.new(0, 0, 0, 50)
        InfoDescription.BackgroundTransparency = 1
        InfoDescription.Text = Languages[HubState.CurrentLanguage].version_info
        InfoDescription.Font = Enum.Font.Gotham
        InfoDescription.TextSize = 16
        InfoDescription.TextColor3 = Color3.fromRGB(200, 200, 220)
        InfoDescription.TextWrapped = true
        InfoDescription.TextYAlignment = Enum.TextYAlignment.Top
        InfoDescription.Parent = InfoContainer
        
        table.insert(ThemedElements, {
            Element = InfoDescription,
            Properties = {TextColor3 = "TextSecondary", TextKey = "version_info"}
        })
    end
    
    createDashboardContent()
    createScriptsContent()
    createAIAssistantContent()
    createSettingsContent()
    createInfoContent()
    
    local internalToggleFunction = function(visible)
        local targetPos = visible and UDim2.new(0.5, -425, 0.5, -275) or UDim2.new(0.5, -425, 1.2, -275)
        local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out)
        safeTween(MainFrame, tweenInfo, {Position = targetPos})
        HubState.Visible = visible
    end

    CloseButton.MouseButton1Click:Connect(function() internalToggleFunction(false) end)
    
    applyTheme(HubState.CurrentTheme)
    applyLanguage(HubState.CurrentLanguage)
    
    switchTab("Dashboard")
    
    return ScreenGui, internalToggleFunction
end


--// ====================================[   LOGIN & INITIALIZATION   ]==================================== //--

local function createLoginUI()
    if playerGui:FindFirstChild("HubLogin") then return end -- Prevent multiple login screens

    local LoginGui = Instance.new("ScreenGui")
    LoginGui.Name = "HubLogin"
    LoginGui.ResetOnSpawn = false
    LoginGui.Parent = playerGui
    
    local LoginFrame = Instance.new("Frame")
    LoginFrame.Size = UDim2.new(0, 400, 0, 300)
    LoginFrame.Position = UDim2.new(0.5, -200, -0.5, -150)
    LoginFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    LoginFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
    LoginFrame.BackgroundTransparency = 0.1
    LoginFrame.BorderSizePixel = 0
    LoginFrame.Parent = LoginGui
    
    local LoginCorner = Instance.new("UICorner")
    LoginCorner.CornerRadius = UDim.new(0, 20)
    LoginCorner.Parent = LoginFrame
    
    local LoginGradient = Instance.new("UIGradient")
    LoginGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(120, 110, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(15, 15, 25))
    }
    LoginGradient.Parent = LoginFrame
    
    local LoginTitle = Instance.new("TextLabel")
    LoginTitle.Size = UDim2.new(1, 0, 0, 60)
    LoginTitle.Position = UDim2.new(0, 0, 0, 20)
    LoginTitle.BackgroundTransparency = 1
    LoginTitle.Text = Languages[HubState.CurrentLanguage].login_title or "üîê Secure Login"
    LoginTitle.Font = Enum.Font.GothamBold
    LoginTitle.TextSize = 24
    LoginTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    LoginTitle.Parent = LoginFrame
    
    local UsernameBox = Instance.new("TextBox")
    UsernameBox.Size = UDim2.new(0.8, 0, 0, 45)
    UsernameBox.Position = UDim2.new(0.1, 0, 0, 100)
    UsernameBox.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
    UsernameBox.BackgroundTransparency = 0.3
    UsernameBox.BorderSizePixel = 0
    UsernameBox.PlaceholderText = Languages[HubState.CurrentLanguage].username_placeholder or "Enter username"
    UsernameBox.Text = ""
    UsernameBox.Font = Enum.Font.Gotham
    UsernameBox.TextSize = 16
    UsernameBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    UsernameBox.Parent = LoginFrame
    
    Instance.new("UICorner", UsernameBox).CornerRadius = UDim.new(0, 8)
    Instance.new("UIPadding", UsernameBox).PaddingLeft = UDim.new(0, 15)
    
    local PasswordBox = Instance.new("TextBox")
    PasswordBox.Size = UDim2.new(0.8, 0, 0, 45)
    PasswordBox.Position = UDim2.new(0.1, 0, 0, 160)
    PasswordBox.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
    PasswordBox.BackgroundTransparency = 0.3
    PasswordBox.BorderSizePixel = 0
    PasswordBox.PlaceholderText = Languages[HubState.CurrentLanguage].password_placeholder or "Enter password"
    PasswordBox.Text = ""
    PasswordBox.Font = Enum.Font.Gotham
    PasswordBox.TextSize = 16
    PasswordBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    PasswordBox.Parent = LoginFrame
    
    Instance.new("UICorner", PasswordBox).CornerRadius = UDim.new(0, 8)
    Instance.new("UIPadding", PasswordBox).PaddingLeft = UDim.new(0, 15)
       
    local LoginButton = Instance.new("TextButton")
    LoginButton.Size = UDim2.new(0.6, 0, 0, 45)
    LoginButton.Position = UDim2.new(0.2, 0, 0, 220)
    LoginButton.BackgroundColor3 = Color3.fromRGB(120, 110, 255)
    LoginButton.BackgroundTransparency = 0.1
    LoginButton.BorderSizePixel = 0
    LoginButton.Text = Languages[HubState.CurrentLanguage].login_button or "Access Hub"
    LoginButton.Font = Enum.Font.GothamBold
    LoginButton.TextSize = 18
    LoginButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    LoginButton.Parent = LoginFrame
    
    Instance.new("UICorner", LoginButton).CornerRadius = UDim.new(0, 10)
    
    local StatusLabel = Instance.new("TextLabel")
    StatusLabel.Size = UDim2.new(1, 0, 0, 20)
    StatusLabel.Position = UDim2.new(0, 0, 1, -25)
    StatusLabel.BackgroundTransparency = 1
    StatusLabel.Text = ""
    StatusLabel.Font = Enum.Font.Gotham
    StatusLabel.TextSize = 14
    StatusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
    StatusLabel.Parent = LoginFrame
    
    LoginButton.MouseEnter:Connect(function() safeTween(LoginButton, TweenInfo.new(0.2), { BackgroundTransparency = 0 }) end)
    LoginButton.MouseLeave:Connect(function() safeTween(LoginButton, TweenInfo.new(0.2), { BackgroundTransparency = 0.1 }) end)
    
    local function attemptLogin()
        local username = UsernameBox.Text
        local password = PasswordBox.Text
        
        local validCredentials = {
            {user = "0_0lbr3", pass = "ilovethishub"},
            {user = "admin", pass = "ultimate2024"},
            {user = "premium", pass = "hubpro123"},
            {user = "user", pass = "password"}
        }
        
        local isValid = false
        for _, cred in ipairs(validCredentials) do
            if username == cred.user and password == cred.pass then
                isValid = true
                break
            end
        end
        
        if isValid then
            StatusLabel.Text = Languages[HubState.CurrentLanguage].login_success or "Access granted! Welcome to the hub."
            StatusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
            
            safeTween(LoginFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
                Position = UDim2.new(0.5, -200, 1.5, -150),
                Rotation = 5
            })
 
            safeWait(0.6)
            LoginGui:Destroy()
            
            hubGui, toggleHub = createMainUI()
            hubGui.Parent = playerGui
            toggleHub(true)
            
            showNotification("Welcome to 0_0 Hub AI Revolution!", "success")
        else
            StatusLabel.Text = Languages[HubState.CurrentLanguage].login_failed or "Invalid credentials. Please try again."
            StatusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
            
            local originalPos = LoginFrame.Position
            for i = 1, 6 do
                LoginFrame.Position = originalPos + UDim2.new(0, math.random(-8, 8), 0, math.random(-3, 3))
                safeWait(0.05)
            end
            LoginFrame.Position = originalPos
        end
    end

    LoginButton.MouseButton1Click:Connect(attemptLogin)
    
    PasswordBox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            attemptLogin()
        end
    end)
    
    safeTween(LoginFrame, TweenInfo.new(0.8, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
        Position = UDim2.new(0.5, -200, 0.5, -150)
    })
end

local NotificationGui = Instance.new("ScreenGui")
NotificationGui.Name = "Notifications"
NotificationGui.ResetOnSpawn = false
NotificationGui.Parent = playerGui

local NotificationContainer = Instance.new("Frame")
NotificationContainer.Size = UDim2.new(0, 300, 1, 0)
NotificationContainer.Position = UDim2.new(1, -320, 0, 20)
NotificationContainer.BackgroundTransparency = 1
NotificationContainer.Parent = NotificationGui

local NotificationLayout = Instance.new("UIListLayout")
NotificationLayout.SortOrder = Enum.SortOrder.LayoutOrder
NotificationLayout.Padding = UDim.new(0, 8)
NotificationLayout.VerticalAlignment = Enum.VerticalAlignment.Top
NotificationLayout.Parent = NotificationContainer

local oldShowNotification = showNotification
function showNotification(message, notificationType)
    oldShowNotification(message, notificationType)
    
    local notification = Instance.new("Frame")
    notification.Size = UDim2.new(1, 0, 0, 60)
    local color = notificationType == "success" and Color3.fromRGB(100, 200, 100) or
                notificationType == "error" and Color3.fromRGB(200, 100, 100) or
                Color3.fromRGB(100, 150, 200)
    notification.BackgroundColor3 = color
    notification.BackgroundTransparency = 0.1
    notification.BorderSizePixel = 0
    notification.Parent = NotificationContainer
    
    local notifCorner = Instance.new("UICorner")
    notifCorner.CornerRadius = UDim.new(0, 8)
    notifCorner.Parent = notification
    
    local notifText = Instance.new("TextLabel")
    notifText.Size = UDim2.new(1, -20, 1, 0)
    notifText.Position = UDim2.new(0, 10, 0, 0)
    notifText.BackgroundTransparency = 1
    notifText.Text = message
    notifText.Font = Enum.Font.GothamSemibold
    notifText.TextSize = 14
    notifText.TextColor3 = Color3.fromRGB(255, 255, 255)
    notifText.TextWrapped = true
    notifText.TextYAlignment = Enum.TextYAlignment.Center
    notifText.Parent = notification
    
    notification.Position = UDim2.new(1.2, 0, 0, 0)
    safeTween(notification, TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
        Position = UDim2.new(0, 0, 0, 0)
    })
    
    spawn(function()
        safeWait(4)
        if notification.Parent then
            safeTween(notification, TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
                Position = UDim2.new(1.2, 0, 0, 0)
            })
            safeWait(0.4)
            notification:Destroy()
        end
    end)
end

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.RightControl then
        if toggleHub then
            toggleHub(not HubState.Visible)
        elseif not playerGui:FindFirstChild("HubLogin") then
            createLoginUI()
        end
    elseif input.KeyCode == Enum.KeyCode.F1 then
        pcall(function()
            for _, gui in ipairs(playerGui:GetChildren()) do
                if gui.Name:find("Hub") or gui.Name:find("Revolution") or gui.Name:find("0_0") or gui.Name:find("AnimeVisualsGUI") or gui.Name:find("DayNightUI") then
                    gui:Destroy()
                end
            end
            showNotification("Emergency hide activated", "info")
        end)
    elseif input.KeyCode == Enum.KeyCode.F2 then
        if #HubState.ScriptHistory > 0 then
            local lastScriptName = HubState.ScriptHistory[#HubState.ScriptHistory]
            for _, script in ipairs(ScriptLibrary) do
                if script.name == lastScriptName then
                    safeExecute(script.func, script.name)
                    showNotification("Quick-executed: " .. (Languages[HubState.CurrentLanguage][script.name] or script.name), "info")
                    break
                end
            end
        else
            showNotification("No script in history to execute.", "error")
        end
    end
end)

local function safeExecute(func, name)
    local success, err = pcall(func)
    if not success then
        showNotification((Languages[HubState.CurrentLanguage].error_occurred or "An error occurred") .. ": " .. tostring(err), "error")
    end
end

for _, script in ipairs(ScriptLibrary) do
    local originalFunc = script.func
    script.func = function()
        safeExecute(originalFunc, script.name)
    end
end

local function initializeHub()
    if playerGui:FindFirstChild("AI_RevolutionHub") or playerGui:FindFirstChild("HubLogin") then
        showNotification("Hub is already running!", "info")
        return
    end
    
    createLoginUI()
    
    showNotification("Welcome to 0_0 Hub AI Revolution! Press RightControl to toggle.", "success")
end

spawn(function()
    safeWait(2)
    initializeHub()
end)

-- FIX: Remove server-only BindToClose function
--[[
game:BindToClose(function()
    pcall(function()
        print("Saving user preferences...")
        print("Theme:", HubState.CurrentTheme)
        print("Language:", HubState.CurrentLanguage)
    end)
end)
]]

spawn(function()
    while safeWait(60) do
        pcall(function()
            -- FIX: Use modern collectgarbage() syntax
            collectgarbage()
        end)
    end
end)

print("=====================================================================")
print("üöÄ 0_0 Hub V2.3.4 - Critical Hotfix Loaded Successfully!")
print("üß† NEW: AI Assistant for questions and script generation!")
print("üé® FIX: All reported runtime and UI errors have been resolved.")
print("üéÆ Press RightControl to open the hub")
print("üîß Emergency hide: F1 | Quick Execute: F2")
print("üíé Enjoy the future of gaming!")
print("üîç Compatible with:", currentExecutor, "executor")
print("=====================================================================")
